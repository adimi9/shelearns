{
  "id": "CS5",
  "name": "Distributed Systems Basics",
  "category": "Computer Science Fundamentals",
  "primary_tech": "Distributed Systems",
  "topics": [
    "Client-Server Architecture",
    "Concurrency Issues",
    "Fault Tolerance & Consistency",
    "RPC & Message Queues (Concepts)"
  ],
  "recommended": false,
  "tags": [
    "systems",
    "scalability",
    "cloud"
  ],
  "resources": {
    "docs": [
      {
        "url": "https://developer.mozilla.org/en-US/docs/Glossary/REST",
        "description": "An overview of REST (Representational State Transfer) principles and how they apply to web service architecture."
      },
      {
        "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox",
        "description": "An introduction to the basic concepts and properties of the CSS Flexible Box Layout, known as Flexbox, for creating responsive web designs."
      },
      {
        "url": "https://developer.mozilla.org/en-US/",
        "description": "Comprehensive documentation and learning resources for web technologies and the open web platform."
      }
    ],
    "notes": [
      {
        "url": "https://www.geeksforgeeks.org/distributed-systems-tutorial/",
        "description": "This resource provides a comprehensive tutorial on distributed systems, covering fundamental concepts, architecture, and real-world applications."
      },
      {
        "url": "https://www.freecodecamp.org/news/a-thorough-introduction-to-distributed-systems-3b91562c9b3c/",
        "description": "An in-depth introduction to the fundamental concepts and architecture of distributed systems."
      },
      {
        "url": "https://www.geeksforgeeks.org/computer-networks/what-is-a-distributed-system/",
        "description": "An introductory explanation of distributed systems, detailing their characteristics, types, and advantages in computer networks."
      },
      {
        "url": "https://www.geeksforgeeks.org/operating-systems/operating-systems/",
        "description": "An overview of operating systems, covering their functions, types, and key concepts."
      },
      {
        "url": "https://www.geeksforgeeks.org/system-design/eventual-consistency-in-distributive-systems-learn-system-design/",
        "description": "An overview of eventual consistency in distributed systems, explaining its importance and implementation in system design."
      }
    ],
    "videos": [
      "https://www.youtube.com/watch?v=IJWwfMyPu1c",
      "https://www.youtube.com/watch?v=m8Icp_Cid5o",
      "https://www.youtube.com/watch?v=CESKgdNiKJw",
      "https://www.youtube.com/watch?v=FxAom29OEKE",
      "https://www.youtube.com/watch?v=ajjOEltiZm4"
    ]
  },
  "quiz": [
    {
      "question": "What is a primary advantage of client-server architecture in distributed systems?",
      "options": [
        "Improved security by centralizing data",
        "Faster data processing due to parallelism",
        "Redundancy of data to prevent loss",
        "Reduced latency by local data storage"
      ],
      "correct_option": 0,
      "hint": "Think about how centralization can benefit data management."
    },
    {
      "question": "Which of the following is a common issue when handling concurrency in distributed systems?",
      "options": [
        "Increased data throughput",
        "Data consistency problems",
        "Enhanced data encryption",
        "Improved fault tolerance"
      ],
      "correct_option": 1,
      "hint": "Consider how simultaneous operations might affect data integrity."
    },
    {
      "question": "What is the role of fault tolerance in distributed systems?",
      "options": [
        "To ensure the system continues functioning in case of failures",
        "To enhance the speed of data processing",
        "To manage the allocation of resources efficiently",
        "To encrypt data during transmission"
      ],
      "correct_option": 0,
      "hint": "Think about system reliability during unexpected failures."
    },
    {
      "question": "In the context of Remote Procedure Calls (RPC) in distributed systems, what is one major challenge?",
      "options": [
        "Ensuring secure communication",
        "Achieving high network bandwidth",
        "Synchronizing clocks across systems",
        "Maintaining data consistency across nodes"
      ],
      "correct_option": 0,
      "hint": "Consider the importance of protecting data across different systems during communication."
    },
    {
      "question": "How do message queues contribute to the efficiency of distributed systems?",
      "options": [
        "They allow for asynchronous communication between services",
        "They ensure data is encrypted end-to-end",
        "They synchronize system clocks",
        "They optimize data storage across nodes"
      ],
      "correct_option": 0,
      "hint": "Think about how tasks can be managed without requiring immediate responses."
    }
  ]
}