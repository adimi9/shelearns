{
  "id": "MD17",
  "name": "State Management in Mobile Apps",
  "category": "Mobile Development",
  "primary_tech": "State Management",
  "topics": [
    "Prop Drilling vs. Centralized State",
    "Provider (Flutter)",
    "Redux/MobX (React Native)",
    "ViewModel/LiveData (Android)"
  ],
  "recommended": true,
  "tags": [
    "architecture",
    "data-flow",
    "scalability"
  ],
  "resources": {
    "beginner": {
      "docs": [
        "https://redux.js.org/introduction/getting-started",
        "https://developer.android.com/guide/components/activities/intro-activities",
        "https://firebase.google.com/docs/database",
        "https://sc1.checkpoint.com/documents/latest/APIs/",
        "https://docs.flutter.dev/data-and-backend/state-mgmt/simple"
      ],
      "notes": [
        "https://redux.js.org/introduction/getting-started",
        "https://developer.apple.com/tutorials/app-dev-training/",
        "https://docs.flutter.dev/data-and-backend/state-mgmt/simple",
        "https://www.youtube.com/c/makeappswithdanny",
        "https://www.linkedin.com/posts/johannesmilke_expense-tracker-app-flutter-bloc-tutorial-activity-7226267013524918275-6K3K"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=ELFORM9fmss&pp=0gcJCdgAo7VqN5tD",
        "https://www.youtube.com/watch?v=8sXRyHI3bLw",
        "https://www.youtube.com/watch?v=0-S5a0eXPoc",
        "https://www.youtube.com/watch?v=5lDJNFSWUD8",
        "https://www.youtube.com/watch?v=SDk_GldOtK8",
        "https://www.youtube.com/watch?v=LFlE8yV7lJY",
        "https://www.youtube.com/watch?v=vIIBp6xJJeA&pp=ygUNI2dldHh0dXRvcmlhbA%3D%3D",
        "https://www.youtube.com/watch?v=bCpFbERgj7s"
      ]
    },
    "intermediate": {
      "docs": [
        "https://developers.google.com/apis-explorer",
        "https://docs.datadoghq.com/api/latest/",
        "https://redux.js.org/introduction/getting-started",
        "https://launchdarkly.com/docs/api"
      ],
      "notes": [
        "https://docs.flutter.dev/data-and-backend/state-mgmt/simple",
        "https://developer.android.com/guide/components/activities/activity-lifecycle",
        "https://help.salesforce.com/s/articleView?id=release-notes.salesforce_release_notes.htm&language=en_US&release=252&type=5",
        "https://learn.microsoft.com/en-us/entra/identity/app-provisioning/customize-application-attributes",
        "https://aws.amazon.com/caching/",
        "https://www.box.com/home",
        "https://doc.arcgis.com/en/arcgis-solutions/11.1/reference/use-communications-data-management.htm"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=ELFORM9fmss&pp=0gcJCdgAo7VqN5tD",
        "https://www.youtube.com/watch?v=HSRYHwL6rPs",
        "https://www.youtube.com/watch?v=8sXRyHI3bLw",
        "https://www.youtube.com/watch?v=I_J7N0n5YPs",
        "https://www.youtube.com/watch?v=HrILchHvMUA&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=dc3B_mMrZ-Q",
        "https://www.youtube.com/watch?v=ZeZPmC861E8",
        "https://www.youtube.com/watch?v=56Ihv5MF4_U"
      ]
    },
    "advanced": {
      "docs": [
        "https://sc1.checkpoint.com/documents/latest/APIs/",
        "https://docs.flutter.dev/get-started/fundamentals/state-management",
        "https://admob.google.com/home/",
        "https://support.google.com/googlenest/answer/13323253?hl=en",
        "https://cloud.google.com/dialogflow/cx/docs"
      ],
      "notes": [
        "https://docs.flutter.dev/get-started/fundamentals/state-management",
        "https://flutter.dev/learn",
        "https://codewithandrea.com/articles/flutter-deep-links/",
        "https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture",
        "https://getstream.io/blog/compose-tutorials/",
        "https://www.wrike.com/project-management-guide/faq/what-are-project-management-tools/",
        "https://nalexn.github.io/state-management-guide-ios/"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=SDk_GldOtK8&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=8sXRyHI3bLw",
        "https://www.youtube.com/watch?v=56Ihv5MF4_U",
        "https://www.youtube.com/watch?v=dCLhUialKPQ",
        "https://www.youtube.com/watch?v=CQc-QDTmCoQ&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=CzRQ9mnmh44",
        "https://www.youtube.com/watch?v=0-S5a0eXPoc",
        "https://m.youtube.com/watch?v=8cFNtL538lc",
        "https://www.youtube.com/c/TheAndroidFactory",
        "https://www.youtube.com/c/divinecoding/videos"
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is a primary disadvantage of prop drilling in mobile app state management?",
        "options": [
          "Increased code complexity",
          "Improved state visibility",
          "Better performance",
          "Simplifies debugging"
        ],
        "correct_option": 0,
        "hint": "Consider how prop drilling affects code maintenance and scalability."
      },
      {
        "question": "Which state management solution in Flutter uses an InheritedWidget to manage state efficiently?",
        "options": [
          "Redux",
          "MobX",
          "Provider",
          "ViewModel"
        ],
        "correct_option": 2,
        "hint": "This solution is built into the Flutter framework and is widely used for its simplicity."
      }
    ],
    "intermediate": [
      {
        "question": "In React Native, which library is known for its unidirectional data flow and predictability?",
        "options": [
          "Provider",
          "ViewModel",
          "MobX",
          "Redux"
        ],
        "correct_option": 3,
        "hint": "This library is popular for managing the state of large applications with a single source of truth."
      }
    ],
    "advanced": [
      {
        "question": "Which Android architecture component provides a lifecycle-aware way to manage UI-related data?",
        "options": [
          "LiveData",
          "Redux",
          "MobX",
          "Provider"
        ],
        "correct_option": 0,
        "hint": "This component is part of the Android Jetpack suite and helps with observing data changes."
      },
      {
        "question": "In the context of state management, what is a key benefit of using a centralized state over prop drilling?",
        "options": [
          "Easier debugging",
          "Less boilerplate code",
          "Improved performance",
          "Better reusability"
        ],
        "correct_option": 3,
        "hint": "Consider how a centralized state can affect component reusability and state management across the application."
      }
    ]
  }
}