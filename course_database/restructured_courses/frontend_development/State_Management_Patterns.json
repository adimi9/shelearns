{
  "id": "FE3",
  "name": "State Management Patterns",
  "category": "Frontend Development",
  "primary_tech": "Redux",
  "topics": [
    "Local & Global State",
    "Redux / Zustand",
    "Server-State Management"
  ],
  "recommended": true,
  "tags": [
    "state",
    "redux",
    "frontend"
  ],
  "resources": {
    "beginner": {
      "docs": [
        "https://www.apollographql.com/docs/react",
        "https://vuejs.org/guide/introduction",
        "https://vuex.vuejs.org/"
      ],
      "notes": [
        "https://www.youtube.com/watch?v=rF6eq1oru-Y",
        "https://docs.flutter.dev/data-and-backend/state-mgmt/options",
        "https://www.youtube.com/watch?v=SDk_GldOtK8",
        "https://redux.js.org/tutorials/fundamentals/part-1-overview",
        "https://www.youtube.com/watch?v=ZnevdXDH25Q",
        "https://www.gdquest.com/tutorial/godot/design-patterns/finite-state-machine/"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=SDk_GldOtK8",
        "https://www.youtube.com/watch?v=rF6eq1oru-Y",
        "https://www.youtube.com/watch?v=ZnevdXDH25Q",
        "https://www.youtube.com/watch?v=-Y8brhQKvtA",
        "https://www.youtube.com/watch?v=NU_1StN5Tkk",
        "https://www.youtube.com/watch?v=oxeYeMHVLII",
        "https://www.youtube.com/watch?v=ELFORM9fmss&pp=0gcJCdgAo7VqN5tD",
        "https://www.youtube.com/watch?v=poQXNp9ItL4",
        "https://www.youtube.com/rivaanranawat"
      ]
    },
    "intermediate": {
      "docs": [
        "https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions",
        "https://redux-toolkit.js.org/rtk-query/overview",
        "https://docs.cypress.io/app/core-concepts/best-practices",
        "https://docs.dapr.io/developing-applications/building-blocks/actors/actors-overview/"
      ],
      "notes": [
        "https://learn.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview",
        "https://www.ni.com/en/support/documentation/supplemental/16/simple-state-machine-template-documentation.html",
        "https://vuejs.org/guide/scaling-up/state-management",
        "https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html",
        "https://docs.flutter.dev/data-and-backend/state-mgmt/simple",
        "https://auth0.com/blog/state-management-in-angular-with-akita-1/",
        "https://developer.android.com/develop/ui/compose/state"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=-Y8brhQKvtA",
        "https://www.youtube.com/watch?v=ELFORM9fmss&pp=0gcJCdgAo7VqN5tD",
        "https://www.youtube.com/watch?v=NU_1StN5Tkk",
        "https://www.youtube.com/watch?v=aHCDrAbH_go&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=8sXRyHI3bLw",
        "https://www.youtube.com/watch?v=QgK_-G-hWeA",
        "https://www.youtube.com/watch?v=1qe0cTPJHpU",
        "https://www.youtube.com/c/HusseinNasser-software-engineering/community",
        "https://www.youtube.com/channel/UC3cEGKhg3OERn-ihVsJcb7A",
        "https://www.youtube.com/channel/UCrL69sErRwEyr7_p0qVCkOQ/videos"
      ]
    },
    "advanced": {
      "docs": [
        "https://sc1.checkpoint.com/documents/latest/APIs/",
        "https://docs.flutter.dev/get-started/fundamentals/state-management",
        "https://react.dev/reference/react/useState"
      ],
      "notes": [
        "https://www.youtube.com/watch?v=SDk_GldOtK8&pp=0gcJCfwAo7VqN5tD",
        "https://overreacted.io/a-complete-guide-to-useeffect/",
        "https://www.youtube.com/watch?v=UgJJ0zROAJM",
        "https://www.redpanda.com/guides/kafka-architecture-kafka-streams",
        "https://www.youtube.com/watch?v=qVTlioAqUv8"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=SDk_GldOtK8&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=UgJJ0zROAJM",
        "https://www.youtube.com/watch?v=5OzLrbk82zY&pp=0gcJCf0Ao7VqN5tD",
        "https://www.youtube.com/watch?v=bHEdQWEtyKY",
        "https://www.youtube.com/watch?v=8sXRyHI3bLw",
        "https://www.youtube.com/watch?v=qVTlioAqUv8",
        "https://www.youtube.com/watch?v=dCLhUialKPQ",
        "https://www.youtube.com/c/DrJacobGoodin"
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is a primary difference between local and global state management?",
        "options": [
          "Local state is managed within a single component, while global state is shared across multiple components.",
          "Local state requires a library like Redux for management, whereas global state does not.",
          "Global state can only be managed using server-side tools, unlike local state.",
          "Local state persists across sessions, whereas global state does not."
        ],
        "correct_option": 0,
        "hint": "Consider the scope and sharing capabilities of the state."
      },
      {
        "question": "Which of the following libraries is not typically used for state management in React applications?",
        "options": [
          "Redux",
          "Zustand",
          "Context API",
          "Django"
        ],
        "correct_option": 3,
        "hint": "Think about which option is a web framework rather than a state management library."
      }
    ],
    "intermediate": [
      {
        "question": "In Redux, what is the role of a reducer?",
        "options": [
          "To dispatch actions to change the state.",
          "To define the initial state of the application.",
          "To specify how the application's state changes in response to actions.",
          "To connect the Redux store to React components."
        ],
        "correct_option": 2,
        "hint": "Reducers are pure functions that determine the changes in the state."
      }
    ],
    "advanced": [
      {
        "question": "What is a common challenge when managing server-state?",
        "options": [
          "Synchronizing state between the client and server.",
          "Storing server-state in local storage.",
          "Creating server-state using only client-side libraries.",
          "Using server-state without a database."
        ],
        "correct_option": 0,
        "hint": "Consider the difficulties in keeping client and server data consistent."
      },
      {
        "question": "Which state management library is known for its minimalistic and flexible API, often used as an alternative to Redux?",
        "options": [
          "Zustand",
          "MobX",
          "Vuex",
          "Relay"
        ],
        "correct_option": 0,
        "hint": "This library is known for its simplicity and small footprint."
      }
    ]
  }
}