{
  "id": "FE19",
  "name": "Angular Basics",
  "category": "Frontend Development",
  "primary_tech": "Angular",
  "topics": [
    "TypeScript in Angular",
    "Components & Templates",
    "RxJS & Services"
  ],
  "recommended": false,
  "tags": [
    "framework",
    "SPA",
    "TypeScript-based"
  ],
  "resources": {
    "beginner": {
      "docs": [
        {
          "url": "https://angular.io/guide/architecture",
          "description": "An overview of the fundamental architecture concepts in Angular applications.",
          "title": "Angular - Introduction to Angular concepts",
          "resource_order": 1
        },
        {
          "url": "https://v17.angular.io/guide/testing-components-basics",
          "description": "An introductory guide to testing components in Angular applications.",
          "title": "Angular",
          "resource_order": 2
        },
        {
          "url": "https://angular.dev/",
          "description": "Official documentation and resources for Angular, a platform for building web applications.",
          "title": "Home • Angular",
          "resource_order": 3
        },
        {
          "url": "https://jestjs.io/docs/getting-started",
          "description": "A beginner's guide to setting up and using Jest for JavaScript testing.",
          "title": "Getting Started · Jest",
          "resource_order": 4
        }
      ],
      "notes": [
        {
          "url": "https://angular.dev/tutorials/learn-angular",
          "description": "A step-by-step tutorial for learning Angular framework basics.",
          "title": "Learn Angular • Angular",
          "resource_order": 1
        },
        {
          "url": "https://www.w3schools.com/angular/",
          "description": "An introductory tutorial for building web applications using Angular.",
          "title": "AngularJS Tutorial",
          "resource_order": 2
        },
        {
          "url": "https://www.simplilearn.com/tutorials/angular-tutorial",
          "description": "An introductory tutorial covering the basics of Angular framework.",
          "title": "Complete Angular Tutorial: Learn from Basics to Advanced",
          "resource_order": 3
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=k5E2AVpwsko&pp=0gcJCfwAo7VqN5tD",
          "title": "Angular Tutorial for Beginners: Learn Angular & TypeScript",
          "duration": "122m",
          "resource_order": 1
        },
        {
          "url": "https://www.youtube.com/watch?v=oUmVFHlwZsI",
          "title": "MASTER Angular in 90 Minutes with This Crash Course",
          "duration": "89m",
          "resource_order": 2
        },
        {
          "url": "https://www.youtube.com/watch?v=-9VcW7MBDs8",
          "title": "Angular Tutorial for Beginners | Learn Angular Step by step | Angular Tutorial",
          "duration": "137m",
          "resource_order": 3
        },
        {
          "url": "https://www.youtube.com/watch?v=xAT0lHYhHMY",
          "title": "Introduction to Angular - Learning Angular (Part 1)",
          "duration": "4m",
          "resource_order": 4
        },
        {
          "url": "https://m.youtube.com/watch?v=_TLhUCjY9iA&t=8m40s",
          "title": "Learn Angular 8 from Scratch for Beginners - Crash Course",
          "duration": "48m",
          "resource_order": 5
        },
        {
          "url": "https://www.youtube.com/watch?v=JWhRMyyF7nc",
          "title": "Learn Angular A-Z: Complete Tutorial for Beginners",
          "duration": "261m",
          "resource_order": 6
        },
        {
          "url": "https://www.youtube.com/watch?v=FlUCU13dJyo",
          "title": "AngularJS Tutorial #1 - Introduction to AngularJS",
          "duration": "7m",
          "resource_order": 7
        },
        {
          "url": "https://www.youtube.com/watch?v=0eWrpsCLMJQ",
          "title": "Angular Tutorial - 1 - Introduction",
          "duration": "6m",
          "resource_order": 8
        },
        {
          "url": "https://www.youtube.com/watch?v=QETUuZ27N0w",
          "title": "Angularjs Tutorial for Beginners - learn Angular.js using UI-Router",
          "duration": "31m",
          "resource_order": 9
        }
      ]
    },
    "intermediate": {
      "docs": [
        {
          "url": "https://v17.angular.io/guide/testing-components-basics",
          "description": "An introductory guide to testing components in Angular applications.",
          "title": "Angular",
          "resource_order": 1
        },
        {
          "url": "https://angular.dev/guide/signals",
          "description": "An overview of using signals for reactive programming in Angular applications.",
          "title": "Signals • Overview • Angular",
          "resource_order": 2
        },
        {
          "url": "https://jestjs.io/docs/getting-started",
          "description": "A beginner's guide to setting up and using Jest for JavaScript testing.",
          "title": "Getting Started · Jest",
          "resource_order": 3
        },
        {
          "url": "https://firebase.google.com/docs",
          "description": "Official documentation for Firebase, providing guides and API references for building mobile and web applications.",
          "title": "Firebase Documentation",
          "resource_order": 4
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
          "description": "Detailed documentation on the JavaScript Array.prototype.reduce method for reducing array values.",
          "title": "Array.prototype.reduce() - JavaScript | MDN",
          "resource_order": 5
        }
      ],
      "notes": [
        {
          "url": "https://angular.dev/guide/signals",
          "description": "An introduction to using signals for reactive programming in Angular applications.",
          "title": "Signals • Overview • Angular",
          "resource_order": 1
        },
        {
          "url": "https://v17.angular.io/guide/testing-components-basics",
          "description": "An introductory guide to testing components in Angular applications.",
          "title": "Angular",
          "resource_order": 2
        },
        {
          "url": "https://angular.dev/guide/testing",
          "description": "A guide to testing Angular applications effectively.",
          "title": "Testing • Overview • Angular",
          "resource_order": 3
        },
        {
          "url": "https://blog.angular-university.io/angular-signals/",
          "description": "An in-depth exploration of using signals in Angular for reactive programming.",
          "title": "Angular Signals: Complete Guide",
          "resource_order": 4
        },
        {
          "url": "https://www.angularminds.com/blog/writing-your-first-angular-unit-test-step-by-step-tutorial",
          "description": "A step-by-step tutorial on writing your first unit test in Angular.",
          "title": "Writing Your First Angular Unit Test: Step-by-Step Tutorial",
          "resource_order": 5
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=RNr1QZM4A38",
          "title": "Modern Angular Crash Course - E-commerce App!",
          "duration": "79m",
          "resource_order": 1
        },
        {
          "url": "https://www.youtube.com/watch?v=bv9z_UfSqgM",
          "title": "Angular Unit Testing Course - All That You Need to Know About Testing",
          "duration": "69m",
          "resource_order": 2
        },
        {
          "url": "https://m.youtube.com/watch?v=PdVerlfmO6M",
          "title": "Unit testing Angular with Jest tutorial",
          "duration": "35m",
          "resource_order": 3
        },
        {
          "url": "https://www.youtube.com/watch?v=u_awobQ1fws",
          "title": "Protractor Beginner Tutorial 7 | How to create first test case in protractor",
          "duration": "26m",
          "resource_order": 4
        },
        {
          "url": "https://www.youtube.com/watch?v=Gx4iBLKLVHk",
          "title": "Spring Boot Full Stack and Angular | Full Course",
          "duration": "159m",
          "resource_order": 5
        },
        {
          "url": "https://www.youtube.com/watch?v=Qj0oG_TUSUg",
          "title": "Angular Unit Testing Tutorial | Basic Of Unit Testing | Live Session Recording",
          "duration": "36m",
          "resource_order": 6
        },
        {
          "url": "https://www.youtube.com/watch?v=3qBXWUpoPHo",
          "title": "Angular for Beginners Course [Full Front End Tutorial with TypeScript]",
          "duration": "1053m",
          "resource_order": 7
        }
      ]
    },
    "advanced": {
      "docs": [
        {
          "url": "https://angular.dev/guide/signals",
          "description": "An introductory guide to using signals in Angular applications.",
          "title": "Signals • Overview • Angular",
          "resource_order": 1
        },
        {
          "url": "https://www.typescriptlang.org/docs/",
          "description": "The official TypeScript documentation offering guides and references for developers.",
          "title": "TypeScript: The starting point for learning TypeScript",
          "resource_order": 2
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
          "description": "An authoritative resource for learning and referencing JavaScript programming concepts and syntax.",
          "title": "JavaScript | MDN",
          "resource_order": 3
        }
      ],
      "notes": [
        {
          "url": "https://angular.dev/guide/signals",
          "description": "An introduction to using signals for reactive programming in Angular.",
          "title": "Signals • Overview • Angular",
          "resource_order": 1
        },
        {
          "url": "https://blog.angular-university.io/angular-signals/",
          "description": "An introduction to using signals in Angular for reactive programming.",
          "title": "Angular Signals: Complete Guide",
          "resource_order": 2
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=yJdh1_FbtjU",
          "title": "Beginner's RxJS Tutorial: Dive Deep with RxJS Crash Course!",
          "duration": "37m",
          "resource_order": 1
        },
        {
          "url": "https://www.youtube.com/watch?v=N8S2mPuGkgg",
          "title": "Content Projection in Angular - Complete Guide (Beginners/Advanced)",
          "duration": "26m",
          "resource_order": 2
        },
        {
          "url": "https://www.youtube.com/watch?v=6W6gycuhiN0",
          "title": "Signals Unleashed: The Full Guide",
          "duration": "99m",
          "resource_order": 3
        },
        {
          "url": "https://www.youtube.com/watch?v=bv9z_UfSqgM",
          "title": "Angular Unit Testing Course - All That You Need to Know About Testing",
          "duration": "69m",
          "resource_order": 4
        },
        {
          "url": "https://www.youtube.com/watch?v=rtYzt5iWjGs",
          "title": "Angular 18 Tutorial for Beginners | Complete Full Course 2024",
          "duration": "290m",
          "resource_order": 5
        },
        {
          "url": "https://www.youtube.com/watch?v=8sXRyHI3bLw",
          "title": "Web Development Technologies - A Practical Guide",
          "duration": "163m",
          "resource_order": 6
        },
        {
          "url": "https://www.youtube.com/watch?v=i7SWbfapzUs",
          "title": "Master Angular 18 in Tamil: Complete Guide from Beginner to Pro in 4 Hours!",
          "duration": "226m",
          "resource_order": 7
        },
        {
          "url": "https://www.youtube.com/watch?v=RZg6XEGu9EM",
          "title": "Mastering Angular 17: A Deep Dive into the Latest Features",
          "duration": "37m",
          "resource_order": 8
        }
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is the primary language used for developing Angular applications?",
        "options": [
          "JavaScript",
          "TypeScript",
          "Python",
          "Ruby"
        ],
        "correct_option": 1,
        "hint": "It's a superset of JavaScript that adds static types.",
        "question_order": 1
      },
      {
        "question": "Which of the following is used to define the structure and appearance of an Angular component?",
        "options": [
          "Module",
          "Service",
          "Template",
          "Directive"
        ],
        "correct_option": 2,
        "hint": "It is an HTML file associated with a component.",
        "question_order": 2
      },
      {
        "question": "What is the purpose of RxJS in Angular?",
        "options": [
          "To define component styles",
          "To handle asynchronous operations",
          "To manage component routing",
          "To create HTML templates"
        ],
        "correct_option": 1,
        "hint": "It is used for reactive programming with observables.",
        "question_order": 3
      },
      {
        "question": "In Angular, what is a Service typically used for?",
        "options": [
          "To manage state",
          "To provide data or functionality to components",
          "To handle user input",
          "To define routes"
        ],
        "correct_option": 1,
        "hint": "It is often used to separate business logic from component logic.",
        "question_order": 4
      },
      {
        "question": "What is a key feature of Angular components?",
        "options": [
          "They cannot interact with services",
          "They are written in Python",
          "They encapsulate data and logic",
          "They must have more than one template"
        ],
        "correct_option": 2,
        "hint": "This feature allows them to manage their own data and behavior.",
        "question_order": 5
      }
    ],
    "intermediate": [
      {
        "question": "What role does TypeScript play in Angular development?",
        "options": [
          "TypeScript is used to style Angular components.",
          "TypeScript is used for server-side scripting only.",
          "TypeScript provides a typed superset of JavaScript for Angular.",
          "TypeScript is used to manage data in Angular applications."
        ],
        "correct_option": 2,
        "hint": "TypeScript enhances JavaScript by adding types.",
        "question_order": 1
      },
      {
        "question": "How can you bind a component class property to a template in Angular?",
        "options": [
          "Using square brackets []",
          "Using curly braces {}",
          "Using parentheses ()",
          "Using double quotes \"\""
        ],
        "correct_option": 1,
        "hint": "Look for syntax that resembles string interpolation in JavaScript.",
        "question_order": 2
      },
      {
        "question": "What is the primary purpose of RxJS in Angular applications?",
        "options": [
          "To style Angular components",
          "To manage reactive programming through observables",
          "To create Angular modules",
          "To provide routing capabilities"
        ],
        "correct_option": 1,
        "hint": "RxJS is focused on handling asynchronous data streams.",
        "question_order": 3
      },
      {
        "question": "Which Angular feature allows for the separation of a component's logic from its view?",
        "options": [
          "Directives",
          "Modules",
          "Templates",
          "Services"
        ],
        "correct_option": 2,
        "hint": "This feature defines the HTML structure associated with a component.",
        "question_order": 4
      },
      {
        "question": "What is a service in Angular, and why is it used?",
        "options": [
          "A service is used to create new components.",
          "A service manages application routing.",
          "A service is a class that provides shared functionalities across components.",
          "A service is a special kind of directive."
        ],
        "correct_option": 2,
        "hint": "Services are used for logic that needs to be reused in multiple components.",
        "question_order": 5
      }
    ],
    "advanced": [
      {
        "question": "In Angular, how can you ensure a service is a singleton throughout the application?",
        "options": [
          "Use the @Injectable decorator with providedIn: 'root'.",
          "Use the @Component decorator with selector: 'app-root'.",
          "Add the service to the providers array in a component.",
          "Declare the service in the declarations array in a module."
        ],
        "correct_option": 0,
        "hint": "The service needs to be provided globally in the application.",
        "question_order": 1
      },
      {
        "question": "What is the purpose of the 'async' pipe in Angular templates?",
        "options": [
          "To automatically unsubscribe from an observable when the component is destroyed.",
          "To convert a promise into an observable.",
          "To subscribe to an observable and render the emitted values.",
          "To transform an observable into a promise."
        ],
        "correct_option": 2,
        "hint": "It deals with observables and promises in templates.",
        "question_order": 2
      },
      {
        "question": "How can you define input properties in an Angular component using TypeScript?",
        "options": [
          "Use the @Input() decorator before a property declaration.",
          "Use the @Output() decorator before a property declaration.",
          "Add the property to the constructor function.",
          "Declare the property in the ngOnInit lifecycle hook."
        ],
        "correct_option": 0,
        "hint": "This decorator allows data binding from parent to child components.",
        "question_order": 3
      },
      {
        "question": "Which RxJS operator would you use to filter out values emitted by an observable?",
        "options": [
          "map",
          "filter",
          "reduce",
          "switchMap"
        ],
        "correct_option": 1,
        "hint": "This operator removes items emitted by an observable by only emitting those that satisfy a specified predicate.",
        "question_order": 4
      },
      {
        "question": "In Angular, how can you pass data to a child component from a parent component?",
        "options": [
          "Using the @Output() decorator and EventEmitter.",
          "Using the @Input() decorator and binding the property in the parent template.",
          "Injecting the child component into the parent component's constructor.",
          "Using a service to share data between the components."
        ],
        "correct_option": 1,
        "hint": "This involves a decorator that allows the parent component to bind to a property of the child component.",
        "question_order": 5
      }
    ]
  }
}