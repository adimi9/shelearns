{
  "id": "FE22",
  "name": "Responsive Web Design Mastery",
  "category": "Frontend Development",
  "primary_tech": "CSS Responsive Design",
  "topics": [
    "Media Queries",
    "Flexbox & Grid",
    "Mobile-First & Viewport"
  ],
  "recommended": true,
  "tags": [
    "responsive",
    "CSS",
    "layout"
  ],
  "resources": {
    "beginner": {
      "docs": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/CSS_layout/Responsive_Design",
          "description": "An introductory guide to implementing responsive web design using CSS.",
          "title": "Responsive web design - Learn web development | MDN",
          "resource_order": 1
        },
        {
          "url": "https://vuejs.org/guide/introduction",
          "description": "An introductory guide to understanding and using Vue.js for building web applications.",
          "title": "Introduction | Vue.js",
          "resource_order": 2
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS",
          "description": "An extensive resource for learning and referencing CSS properties, syntax, and best practices.",
          "title": "CSS: Cascading Style Sheets | MDN",
          "resource_order": 3
        },
        {
          "url": "https://getbootstrap.com/docs/5.0/getting-started/introduction/",
          "description": "An introductory guide to getting started with Bootstrap 5 for web development.",
          "title": "Introduction · Bootstrap v5.0",
          "resource_order": 4
        },
        {
          "url": "https://manual.bubble.io/",
          "description": "An official manual for building applications using Bubble's no-code platform.",
          "title": "Introduction | Bubble Docs",
          "resource_order": 5
        }
      ],
      "notes": [
        {
          "url": "https://www.w3schools.com/css/css_rwd_intro.asp",
          "description": "An introductory guide to responsive web design using CSS.",
          "title": "Responsive Web Design Introduction",
          "resource_order": 1
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/CSS_layout/Responsive_Design",
          "description": "An introductory guide to implementing responsive design using CSS.",
          "title": "Responsive web design - Learn web development | MDN",
          "resource_order": 2
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=oUVGW_2vp0I",
          "title": "HTML Email Developer Course 2025 - NEW HTML Email Mastery Course",
          "duration": "24m",
          "resource_order": 1
        },
        {
          "url": "https://www.youtube.com/watch?v=fghWUZfkyew",
          "title": "Create Responsive Website Designs | Figma Tutorial",
          "duration": "13m",
          "resource_order": 2
        },
        {
          "url": "https://www.youtube.com/watch?v=gwiX0oASlEw",
          "title": "Make Your Web Design Responsive in 10 Minutes | Figma Tutorial",
          "duration": "11m",
          "resource_order": 3
        },
        {
          "url": "https://www.youtube.com/watch?v=Eb3lOiukwAQ&pp=0gcJCfwAo7VqN5tD",
          "title": "HTML & CSS Full Course | Web Development for Beginners",
          "duration": "341m",
          "resource_order": 4
        },
        {
          "url": "https://m.youtube.com/watch?v=hKsSgU5b0Gw&t=78s",
          "title": "Full Course HTML Tutorial - How to Make a Web Site Using HTML and Notepad",
          "duration": "58m",
          "resource_order": 5
        },
        {
          "url": "https://www.youtube.com/watch?v=I2UBjN5ER4s&pp=0gcJCf0Ao7VqN5tD",
          "title": "React Website Tutorial - Beginner React JS Project Fully Responsive",
          "duration": "102m",
          "resource_order": 6
        },
        {
          "url": "https://www.youtube.com/watch?v=gwiX0oASlEw&pp=ygUJI2ZpaXRuY3Nz",
          "title": "Make Your Web Design Responsive in 10 Minutes | Figma Tutorial",
          "duration": "11m",
          "resource_order": 7
        },
        {
          "url": "https://www.youtube.com/watch?v=aYRoHooj0hg",
          "title": "Figma Responsive Design for Development (Box Model + Auto Layout)",
          "duration": "15m",
          "resource_order": 8
        }
      ]
    },
    "intermediate": {
      "docs": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries",
          "description": "A detailed guide on using CSS media queries for responsive web design.",
          "title": "Using media queries - CSS | MDN",
          "resource_order": 1
        },
        {
          "url": "https://vuejs.org/guide/introduction",
          "description": "An introductory guide to the Vue.js framework for building user interfaces.",
          "title": "Introduction | Vue.js",
          "resource_order": 2
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS",
          "description": "An extensive reference and guide for CSS (Cascading Style Sheets) on MDN Web Docs.",
          "title": "CSS: Cascading Style Sheets | MDN",
          "resource_order": 3
        }
      ],
      "notes": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/CSS_layout/Responsive_Design",
          "description": "An introductory guide to implementing responsive design using CSS layout techniques.",
          "title": "Responsive web design - Learn web development | MDN",
          "resource_order": 1
        },
        {
          "url": "https://www.figma.com/",
          "description": "A collaborative interface design tool for teams to create, prototype, and share designs in real-time.",
          "title": "Figma: The Collaborative Interface Design Tool",
          "resource_order": 2
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=LMagNcngvcU",
          "title": "Build and Deploy a Fully Responsive Modern UI/UX Website in React JS",
          "duration": "201m",
          "resource_order": 1
        },
        {
          "url": "https://www.youtube.com/watch?v=3HNyXCPDQ7Q",
          "title": "Build and Deploy a Fullstack Responsive Portfolio Website | ULTIMATE Step By Step Tutorial 2023",
          "duration": "263m",
          "resource_order": 2
        },
        {
          "url": "https://www.youtube.com/watch?v=31wzhvz0vsw",
          "title": "Figma Advanced Tutorial: A 2-hour Masterclass",
          "duration": "132m",
          "resource_order": 3
        },
        {
          "url": "https://www.youtube.com/watch?v=F627pKNUCVQ",
          "title": "Build and Deploy 4 Modern React Apps and Get Hired as a Frontend Developer | Full 10-Hour Course",
          "duration": "584m",
          "resource_order": 4
        },
        {
          "url": "https://www.youtube.com/watch?v=B-ytMSuwbf8",
          "title": "Web Design for Beginners | FREE COURSE",
          "duration": "318m",
          "resource_order": 5
        },
        {
          "url": "https://www.youtube.com/watch?v=IWdDr54qE4A",
          "title": "The Complete Bubble.io Crash Course For Beginners (FREE COURSE)",
          "duration": "102m",
          "resource_order": 6
        },
        {
          "url": "https://www.youtube.com/watch?v=FHTbsZEJspU",
          "title": "Build and Deploy a Modern YouTube Clone Application in React JS with Material UI 5 | RapidAPI",
          "duration": "141m",
          "resource_order": 7
        },
        {
          "url": "https://www.youtube.com/watch?v=p0bGHP-PXD4",
          "title": "Build a Responsive Website | HTML, CSS Grid, Flexbox & More",
          "duration": "122m",
          "resource_order": 8
        },
        {
          "url": "https://www.youtube.com/watch?v=rrd91OK9YYI",
          "title": "From Figma to Elementor: Beginners tutorial project",
          "duration": "73m",
          "resource_order": 9
        }
      ]
    },
    "advanced": {
      "docs": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS",
          "description": "An extensive resource for learning and referencing CSS web design standards and techniques.",
          "title": "CSS: Cascading Style Sheets | MDN",
          "resource_order": 1
        },
        {
          "url": "https://www.linkedin.com/pulse/my-guide-mastering-api-product-management-gurrpreet-sinngh-iqizc",
          "description": "A guide to mastering API product management by Gurrpreet Sinngh.",
          "title": "My Guide to Mastering API Product Management",
          "resource_order": 2
        },
        {
          "url": "https://help.figma.com/hc/en-us/articles/15339657135383-Guide-to-variables-in-Figma",
          "description": "An in-depth guide on using variables in Figma for design efficiency.",
          "title": "Guide to variables in Figma – Figma Learn - Help Center",
          "resource_order": 3
        }
      ],
      "notes": [
        {
          "url": "https://www.geeksforgeeks.org/60-days-of-frontend-development/",
          "description": "A structured 60-day learning plan for mastering frontend development skills.",
          "title": "60 Days of Frontend Development: A Complete Guide For Beginners - GeeksforGeeks",
          "resource_order": 1
        },
        {
          "url": "https://web.dev/learn/design",
          "description": "An in-depth resource for learning web design principles and best practices.",
          "title": "Learn Responsive Design  |  web.dev",
          "resource_order": 2
        },
        {
          "url": "https://css-tricks.com/snippets/css/a-guide-to-flexbox/",
          "description": "An in-depth guide to understanding and using CSS Flexbox for responsive web design.",
          "title": "CSS Flexbox Layout Guide | CSS-Tricks",
          "resource_order": 3
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=31wzhvz0vsw",
          "title": "Figma Advanced Tutorial: A 2-hour Masterclass",
          "duration": "132m",
          "resource_order": 1
        },
        {
          "url": "https://www.youtube.com/watch?v=cKZEgtQUxlU&pp=ygUMI3VpdXhfY291cnNl",
          "title": "Design 101 Crash Course: Learn UX/UI Design, Figma (6 HOURS!) | Zero To Mastery",
          "duration": "373m",
          "resource_order": 2
        },
        {
          "url": "https://www.youtube.com/watch?v=6biMWgD6_JY",
          "title": "Tailwind CSS v4 Full Course 2025 | Master Tailwind in One Hour",
          "duration": "54m",
          "resource_order": 3
        },
        {
          "url": "https://www.youtube.com/watch?v=lCxcTsOHrjo&pp=0gcJCfwAo7VqN5tD",
          "title": "Tailwind CSS Full Course for Beginners | Complete All-in-One Tutorial | 3 Hours",
          "duration": "180m",
          "resource_order": 4
        },
        {
          "url": "https://www.youtube.com/watch?v=RGCgLPMA8m4",
          "title": "Design a Travel Website Landing Page with HTML & CSS | Step-by-Step Guide to Responsive Website",
          "duration": "54m",
          "resource_order": 5
        },
        {
          "url": "https://www.youtube.com/watch?v=j6Ule7GXaRs",
          "title": "Learn Web Design For Beginners - Full Course",
          "duration": "187m",
          "resource_order": 6
        },
        {
          "url": "https://www.youtube.com/watch?v=ZkiqyA0N71U&pp=0gcJCf0Ao7VqN5tD",
          "title": "Figma Crash Course 2024 – Full Website in 60 Minutes",
          "duration": "65m",
          "resource_order": 7
        },
        {
          "url": "https://www.youtube.com/watch?v=slGF7HOsCPs",
          "title": "Wix Studio | Webinar: Mastering advanced layouts with pixel-perfect responsive control",
          "duration": "58m",
          "resource_order": 8
        }
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is the primary purpose of media queries in responsive web design?",
        "options": [
          "To apply styles based on screen size and resolution",
          "To create animations for web elements",
          "To optimize the loading speed of a website",
          "To manage server-side logic"
        ],
        "correct_option": 0,
        "hint": "Think about how styles change for different devices.",
        "question_order": 1
      },
      {
        "question": "Which CSS module is designed to lay out items in a row or column, with flexible sizing?",
        "options": [
          "Flexbox",
          "Grid",
          "Box Model",
          "Positioning"
        ],
        "correct_option": 0,
        "hint": "This module is often used for single-dimensional layouts.",
        "question_order": 2
      },
      {
        "question": "What is the main difference between Flexbox and Grid in CSS?",
        "options": [
          "Flexbox is for single-dimensional layouts, Grid is for two-dimensional layouts",
          "Flexbox is faster than Grid",
          "Grid does not support alignment properties",
          "Flexbox cannot be used for responsive design"
        ],
        "correct_option": 0,
        "hint": "Consider the axes that each layout method primarily manages.",
        "question_order": 3
      },
      {
        "question": "What does 'mobile-first' design strategy involve?",
        "options": [
          "Designing the desktop version first and then adapting for mobile",
          "Creating a separate website for mobile users",
          "Designing for smaller screens first and then enhancing for larger screens",
          "Prioritizing mobile app development over website development"
        ],
        "correct_option": 2,
        "hint": "This strategy starts with the smallest screen in mind.",
        "question_order": 4
      },
      {
        "question": "What is the purpose of the viewport meta tag in HTML?",
        "options": [
          "To control the page's dimensions and scaling on different devices",
          "To link to external CSS files",
          "To define the character set of the document",
          "To specify the document's language"
        ],
        "correct_option": 0,
        "hint": "It affects how a webpage is displayed on mobile devices.",
        "question_order": 5
      }
    ],
    "intermediate": [
      {
        "question": "What is the primary purpose of media queries in responsive web design?",
        "options": [
          "To apply styles based on device orientation",
          "To ensure websites are mobile-friendly",
          "To optimize loading times for large images",
          "To serve different HTML content for different devices"
        ],
        "correct_option": 0,
        "hint": "Media queries allow you to change styles based on specific conditions such as screen size.",
        "question_order": 1
      },
      {
        "question": "Which CSS property is used with Flexbox to define the alignment of items along the main axis?",
        "options": [
          "align-items",
          "justify-content",
          "align-content",
          "flex-direction"
        ],
        "correct_option": 1,
        "hint": "This property controls how items are spaced within a flex container along the main axis.",
        "question_order": 2
      },
      {
        "question": "How does the Mobile-First approach influence the way you write CSS?",
        "options": [
          "It encourages writing CSS for desktop first and then adding mobile styles",
          "It starts with the smallest screen size and adds styles for larger screens",
          "It focuses on writing CSS for mobile devices only",
          "It uses JavaScript to detect mobile devices and apply styles"
        ],
        "correct_option": 1,
        "hint": "Think about writing styles for the smallest screen first and then expanding.",
        "question_order": 3
      },
      {
        "question": "In CSS Grid, what does the property 'grid-template-columns' specify?",
        "options": [
          "The number of rows in a grid",
          "The number of columns in a grid",
          "The size of the grid container",
          "The spacing between grid items"
        ],
        "correct_option": 1,
        "hint": "This property is used to define how many columns a grid has and their sizes.",
        "question_order": 4
      },
      {
        "question": "What is the role of the viewport meta tag in responsive web design?",
        "options": [
          "To enable Flexbox and Grid layout",
          "To control the layout on mobile devices",
          "To define the screen width for all devices",
          "To set the color scheme for the website"
        ],
        "correct_option": 1,
        "hint": "It is used to give instructions on how to control the page's dimensions and scaling on different devices.",
        "question_order": 5
      }
    ],
    "advanced": [
      {
        "question": "Which CSS property is used to create a flexible container in Flexbox layout?",
        "options": [
          "display: flex;",
          "flex: 1;",
          "flex-direction: column;",
          "align-items: center;"
        ],
        "correct_option": 0,
        "hint": "This property is used to define a flex container.",
        "question_order": 1
      },
      {
        "question": "In a CSS Grid layout, what does the 'fr' unit represent?",
        "options": [
          "Fraction of free space",
          "Fixed ratio",
          "Flexible response",
          "Fraction of the grid"
        ],
        "correct_option": 0,
        "hint": "This unit is used to distribute space within the grid.",
        "question_order": 2
      },
      {
        "question": "What is the purpose of the 'viewport' meta tag in responsive web design?",
        "options": [
          "To define responsive breakpoints",
          "To set the initial scale of the webpage",
          "To apply CSS styles conditionally",
          "To enable CSS Grid features"
        ],
        "correct_option": 1,
        "hint": "This meta tag is crucial for controlling how a webpage is scaled on different devices.",
        "question_order": 3
      },
      {
        "question": "How would you write a media query targeting devices with a maximum width of 768px?",
        "options": [
          "@media screen and (max-width: 768px)",
          "@media only screen and (width: 768px)",
          "@media all and (min-width: 768px)",
          "@media screen and (device-width: 768px)"
        ],
        "correct_option": 0,
        "hint": "This query is often used for tablets.",
        "question_order": 4
      },
      {
        "question": "What is the default flex-direction value in a Flexbox container?",
        "options": [
          "row",
          "column",
          "row-reverse",
          "column-reverse"
        ],
        "correct_option": 0,
        "hint": "Flex items are arranged horizontally by default.",
        "question_order": 5
      }
    ]
  }
}