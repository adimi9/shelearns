{
  "id": "GD17",
  "name": "C++ Programming for Games",
  "category": "Game Development",
  "primary_tech": "C++",
  "topics": [
    "C++ Language Fundamentals",
    "Memory Management",
    "Pointers & References",
    "Game-specific Data Structures"
  ],
  "recommended": false,
  "tags": [
    "programming",
    "performance",
    "Unreal"
  ],
  "resources": {
    "beginner": {
      "docs": [
        {
          "url": "https://dev.epicgames.com/documentation/en-us/unreal-engine/unreal-engine-5-6-documentation",
          "description": "Comprehensive documentation for Unreal Engine 5.6, covering features, tools, and workflows.",
          "title": "Just a moment..."
        },
        {
          "url": "https://forums.unrealengine.com/t/how-to-start-learning-c-for-unreal-engine/462938",
          "description": "Guidance on starting to learn C++ for Unreal Engine development.",
          "title": "How to start learning c++ for Unreal Engine? - Development / Programming & Scripting - Epic Developer Community Forums"
        },
        {
          "url": "https://dev.epicgames.com/documentation/en-us/unreal-engine/API",
          "description": "Comprehensive API documentation for Unreal Engine developers.",
          "title": "Just a moment..."
        }
      ],
      "notes": [
        {
          "url": "https://www.youtube.com/watch?v=XOs2qynEmNE",
          "description": "A detailed explanation of the double-slit experiment and its implications in quantum mechanics.",
          "title": "Make a C++ game FULL COURSE!",
          "duration": "37m"
        },
        {
          "url": "https://forums.unrealengine.com/t/best-beginner-friendly-c-game-development-tutorial-for-unreal/635858",
          "description": "A forum discussion recommending beginner-friendly C++ game development tutorials for Unreal Engine.",
          "title": "Best Beginner Friendly C++ Game Development Tutorial For Unreal? - General / Tutorial & Course Discussions - Epic Developer Community Forums"
        },
        {
          "url": "https://www.youtube.com/watch?v=Mg4b7EyGgEU",
          "description": "An instructional video on mastering the basics of Git and GitHub for version control.",
          "title": "Introduction to C++ and DirectX Game Development | Tutorial for Beginners",
          "duration": "335m"
        },
        {
          "url": "https://www.udemy.com/course/cpp-fundamentals/",
          "description": "An introductory course on the fundamental concepts of C++ programming.",
          "title": "Just a moment..."
        },
        {
          "url": "https://www.youtube.com/watch?v=S7lXSihz0ac",
          "description": "An instructional video on deploying and managing applications using Kubernetes.",
          "title": "COMP4300 - C++ Game Programming - Lecture 01 - Course Introduction",
          "duration": "84m"
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=S7lXSihz0ac",
          "title": "COMP4300 - C++ Game Programming - Lecture 01 - Course Introduction",
          "duration": "84m"
        },
        {
          "url": "https://www.youtube.com/watch?v=XOs2qynEmNE",
          "title": "Make a C++ game FULL COURSE!",
          "duration": "37m"
        },
        {
          "url": "https://www.youtube.com/watch?v=Mg4b7EyGgEU",
          "title": "Introduction to C++ and DirectX Game Development | Tutorial for Beginners",
          "duration": "335m"
        },
        {
          "url": "https://www.youtube.com/watch?v=E_-lMZDi7Uw",
          "title": "C++ Tutorial 18 - Simple Snake Game (Part 1)",
          "duration": "11m"
        },
        {
          "url": "https://www.youtube.com/watch?v=Eoq12SNaWI8",
          "title": "COMP4300 - Game Programming - Lecture 01 - Course Introduction",
          "duration": "72m"
        },
        {
          "url": "https://www.youtube.com/watch?v=s99UDGdYIUE",
          "title": "COMP4300 - Game Programming - Lecture 01 - Course Introduction",
          "duration": "69m"
        },
        {
          "url": "https://www.youtube.com/watch?v=7qm4OR3EmnQ&pp=ygUII2NwcGdhbWU%3D",
          "title": "If you want to learn how to make games in C++ watch this (All the resources you need to get started)",
          "duration": "4m"
        },
        {
          "url": "https://www.youtube.com/watch?v=PwuIEMUFUnQ",
          "title": "Beginner C++ Game Programming Tutorial 0 DirectX [Introduction/Setup]",
          "duration": "16m"
        }
      ]
    },
    "intermediate": {
      "docs": [
        {
          "url": "https://dev.epicgames.com/documentation/en-us/unreal-engine/epic-cplusplus-coding-standard-for-unreal-engine",
          "description": "Epic Games' C++ coding standards for developing with Unreal Engine.",
          "title": "Just a moment..."
        },
        {
          "url": "https://docs.unity.com/",
          "description": "Official documentation for Unity, a leading real-time development platform for creating 3D, 2D, VR, and AR experiences.",
          "title": "Unity documentation"
        },
        {
          "url": "https://dev.epicgames.com/documentation/en-us/unreal-engine/programming-with-cplusplus-in-unreal-engine",
          "description": "A detailed guide on programming with C++ in Unreal Engine.",
          "title": "Just a moment..."
        },
        {
          "url": "https://stackoverflow.com/questions/7058339/when-should-i-use-pointers-instead-of-references-in-api-design",
          "description": "A discussion on when to use pointers versus references in API design.",
          "title": "Just a moment..."
        }
      ],
      "notes": [
        {
          "url": "https://cplusplus.com/forum/beginner/77018/",
          "description": "A forum discussion providing tips and advice for beginners learning C++ programming.",
          "title": "C++ 2D Game Programming Reference Materi - C++ Forum"
        },
        {
          "url": "https://fancytree.hashnode.dev/setting-up-godot-with-c",
          "description": "A step-by-step guide on integrating C# with the Godot game engine.",
          "title": "Vercel Security Checkpoint"
        },
        {
          "url": "https://cplusplus.com/forum/general/255782/",
          "description": "A forum discussion on implementing custom data structures in C++.",
          "title": "Modern OpenGL C++ Game Programming - C++ Forum"
        },
        {
          "url": "https://edw.is/learning-vulkan/",
          "description": "An in-depth tutorial series for learning Vulkan graphics API from scratch.",
          "title": "How I learned Vulkan and wrote a small game engine with it"
        },
        {
          "url": "https://dev.epicgames.com/community/learning/tutorials/qM2K/unreal-engine-comparing-blueprints-and-c-use-cases",
          "description": "A tutorial comparing Blueprints and C++ use cases in Unreal Engine development.",
          "title": "Just a moment..."
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=2B-pxN7W5Pw",
          "title": "Full Game in C/C++ - Start Gamedev TODAY",
          "duration": "87m"
        },
        {
          "url": "https://www.youtube.com/watch?v=EzmNeAhWqVs",
          "title": "What is Low Latency C++? (Part 1) - Timur Doumler - CppNow 2023",
          "duration": "91m"
        },
        {
          "url": "https://www.youtube.com/watch?v=Py11niOE0fo",
          "title": "C++ switch tutorial (#7) 🔀",
          "duration": "10m"
        },
        {
          "url": "https://www.youtube.com/watch?v=Tof5pRedskI",
          "title": "Real-time Programming with the C++ Standard Library - Timur Doumler - CppCon 2021",
          "duration": "60m"
        },
        {
          "url": "https://www.youtube.com/watch?v=jjDolw1PIsM",
          "title": "What is Low Latency C++    Timur Doumler",
          "duration": "74m"
        },
        {
          "url": "https://www.youtube.com/watch?v=3289vhOUdKA",
          "title": "Cursor AI Tutorial for Beginners [2025 Edition]",
          "duration": "27m"
        },
        {
          "url": "https://www.youtube.com/watch?v=5V3njyRKnkc",
          "title": "C++ Example 06 - Random number dice game",
          "duration": "7m"
        },
        {
          "url": "https://www.youtube.com/watch?v=YzIBwqWC6EM",
          "title": "Back to Basics: Debugging in C++ - Mike Shah - CppCon 2022",
          "duration": "61m"
        },
        {
          "url": "https://www.youtube.com/watch?v=A3R6T1h0ln8",
          "title": "Learn to make First 3D game in Godot 4 (Complete Tutorial Beginner Friendly)",
          "duration": "209m"
        },
        {
          "url": "https://www.youtube.com/watch?v=dToaepIXW4s",
          "title": "The Basics of Profiling - Mathieu Ropert - CppCon 2021",
          "duration": "59m"
        }
      ]
    },
    "advanced": {
      "docs": [
        {
          "url": "https://news.ycombinator.com/item?id=34569425",
          "description": "Discussion on Hacker News about recent advancements in quantum computing technologies.",
          "title": "Ask HN: Which book would you recommend for learning Python in detail? | Hacker News"
        },
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/csharp/",
          "description": "Official Microsoft documentation for learning and mastering C# programming.",
          "title": "C# Guide - .NET managed language | Microsoft Learn"
        },
        {
          "url": "https://whoisryosuke.com/blog/2023/learning-directx-12-in-2023",
          "description": "A detailed guide on learning DirectX 12 for graphics programming in 2023.",
          "title": "Learning DirectX 12 in 2023"
        },
        {
          "url": "https://docs.nvidia.com/cuda/pdf/CUDA_C_Programming_Guide.pdf",
          "description": "The official guide to programming with NVIDIA's CUDA C for parallel computing on GPUs."
        }
      ],
      "notes": [
        {
          "url": "https://www.youtube.com/watch?v=ZzaPdXTrSb8&pp=0gcJCfwAo7VqN5tD",
          "description": "An introduction to the basics of quantum computing for beginners.",
          "title": "C++ Tutorial for Beginners - Learn C++ in 1 Hour",
          "duration": "82m"
        },
        {
          "url": "https://edw.is/learning-vulkan/",
          "description": "An introductory guide to learning and understanding Vulkan graphics API.",
          "title": "How I learned Vulkan and wrote a small game engine with it"
        },
        {
          "url": "https://www.youtube.com/watch?v=AmGSEH7QcDg",
          "description": "An instructional video on using GitHub Copilot for efficient coding.",
          "title": "Learn Unity Beginner/Intermediate 2025 (FREE COMPLETE Course - Unity Tutorial)",
          "duration": "649m"
        },
        {
          "url": "https://www.learncpp.com/",
          "description": "An educational platform providing tutorials and resources for learning C++ programming.",
          "title": "Learn C++ – Skill up with our free tutorials"
        },
        {
          "url": "https://www.youtube.com/watch?v=_bYFu9mBnr4&pp=0gcJCfwAo7VqN5tD",
          "description": "An introductory tutorial on Python programming for beginners.",
          "title": "C++ Programming All-in-One Tutorial Series (10 HOURS!)",
          "duration": "628m"
        },
        {
          "url": "https://www.amazon.com/Best-Sellers-C++-Programming-Language/zgbs/books/9045760011",
          "description": "A list of best-selling books on C++ programming language.",
          "title": "Amazon Best Sellers: Best C++ Programming Language"
        },
        {
          "url": "https://www.youtube.com/watch?v=-TkoO8Z07hI",
          "description": "An instructional video on the fundamentals of Git and GitHub for beginners.",
          "title": "C++ Full Course for free ⚡️",
          "duration": "360m"
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=AmGSEH7QcDg",
          "title": "Learn Unity Beginner/Intermediate 2025 (FREE COMPLETE Course - Unity Tutorial)",
          "duration": "649m"
        },
        {
          "url": "https://www.youtube.com/watch?v=-TkoO8Z07hI",
          "title": "C++ Full Course for free ⚡️",
          "duration": "360m"
        },
        {
          "url": "https://www.youtube.com/watch?v=S9BHuodNDlo",
          "title": "Unreal Engine 5 Game Programming, C++ and Blueprints !",
          "duration": "335m"
        },
        {
          "url": "https://www.youtube.com/watch?v=qZpMX8Re_2Q",
          "title": "Learn C# FREE Tutorial Course Beginner to Advanced! [2025 - 12 HOURS]",
          "duration": "760m"
        },
        {
          "url": "https://www.youtube.com/watch?v=jTJvyKZDFsY",
          "title": "20 Programming Projects That Will Make You A God At Coding",
          "duration": "14m"
        },
        {
          "url": "https://www.youtube.com/watch?v=YzIBwqWC6EM",
          "title": "Back to Basics: Debugging in C++ - Mike Shah - CppCon 2022",
          "duration": "61m"
        },
        {
          "url": "https://www.youtube.com/watch?v=6UlU_FsicK8&pp=0gcJCfwAo7VqN5tD",
          "title": "Unreal Engine 5 – Full Course for Beginners",
          "duration": "683m"
        },
        {
          "url": "https://www.youtube.com/watch?v=1srFmjt1Ib0",
          "title": "Full Lua Programming Crash Course - Beginner to Advanced",
          "duration": "220m"
        },
        {
          "url": "https://www.youtube.com/watch?v=oHmS4HC8wK8",
          "title": "Unreal C++ Course - FULL COURSE FOR FREE",
          "duration": "244m"
        }
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is the primary use of pointers in C++?",
        "options": [
          "To store values directly",
          "To reference memory locations",
          "To hold characters",
          "To perform arithmetic operations"
        ],
        "correct_option": 1,
        "hint": "Pointers are used to access memory locations."
      },
      {
        "question": "Which of the following is a fundamental data type in C++?",
        "options": [
          "String",
          "Map",
          "Int",
          "Vector"
        ],
        "correct_option": 2,
        "hint": "Think of basic number types."
      },
      {
        "question": "When you allocate memory using 'new' in C++, what must you do to prevent memory leaks?",
        "options": [
          "Use 'delete' to deallocate memory",
          "Reassign the pointer",
          "Use 'free' function",
          "Nothing, C++ handles it automatically"
        ],
        "correct_option": 0,
        "hint": "Memory allocated with 'new' needs to be manually deallocated."
      },
      {
        "question": "What symbol is used to denote the address-of operator in C++?",
        "options": [
          "*",
          "&",
          "@",
          "#"
        ],
        "correct_option": 1,
        "hint": "This operator is often used with pointers."
      },
      {
        "question": "Which data structure is most commonly used to implement a game map in C++?",
        "options": [
          "Queue",
          "Stack",
          "Array",
          "Linked List"
        ],
        "correct_option": 2,
        "hint": "Consider a structure that allows for indexed access to elements."
      }
    ],
    "intermediate": [
      {
        "question": "Which of the following is a correct way to declare a pointer to an integer in C++?",
        "options": [
          "int *p;",
          "int p*;",
          "int* p;",
          "p int*;"
        ],
        "correct_option": 0,
        "hint": "The asterisk symbol (*) is used to declare a pointer."
      },
      {
        "question": "In C++, what is the primary difference between references and pointers?",
        "options": [
          "References can be null, pointers cannot.",
          "References are a type of pointer.",
          "Pointers can be reassigned, references cannot.",
          "Pointers can point to constants, references cannot."
        ],
        "correct_option": 2,
        "hint": "Consider the reassignment properties of pointers and references."
      },
      {
        "question": "What is the role of the 'delete' operator in C++?",
        "options": [
          "To allocate memory to a variable.",
          "To deallocate memory previously allocated by 'new'.",
          "To delete a file from the system.",
          "To terminate a program."
        ],
        "correct_option": 1,
        "hint": "The 'delete' operator is used in memory management."
      },
      {
        "question": "Which data structure is most commonly used for implementing game state management in C++?",
        "options": [
          "Linked List",
          "Binary Tree",
          "Hash Table",
          "Finite State Machine"
        ],
        "correct_option": 3,
        "hint": "Think about how states transition in a game loop."
      },
      {
        "question": "How does C++ handle memory management differently from languages like Java?",
        "options": [
          "C++ uses garbage collection automatically.",
          "C++ requires manual memory management by the programmer.",
          "C++ does not allow dynamic memory allocation.",
          "C++ uses only stack memory."
        ],
        "correct_option": 1,
        "hint": "Consider the level of control C++ gives to programmers over memory."
      }
    ],
    "advanced": [
      {
        "question": "What is the primary advantage of using pointers over references in C++ game development?",
        "options": [
          "Pointers can be reassigned to point to different objects.",
          "Pointers are safer and more secure than references.",
          "Pointers automatically manage memory allocation.",
          "Pointers are easier to use than references."
        ],
        "correct_option": 0,
        "hint": "Consider the flexibility of changing what a pointer addresses during runtime."
      },
      {
        "question": "Which C++ feature is most crucial for handling dynamic memory allocation efficiently in a game loop?",
        "options": [
          "Virtual Functions",
          "Smart Pointers",
          "Templates",
          "Lambda Expressions"
        ],
        "correct_option": 1,
        "hint": "Think about modern C++ features that help manage memory without manual allocation and deallocation."
      },
      {
        "question": "In C++, what is a common use case for a 'std::vector' in game development?",
        "options": [
          "Storing a fixed number of game levels",
          "Managing dynamic lists of game entities",
          "Implementing a game state machine",
          "Handling file input and output"
        ],
        "correct_option": 1,
        "hint": "This data structure is used for collections that change size during gameplay."
      },
      {
        "question": "How does the 'placement new' operator benefit game developers in C++?",
        "options": [
          "It allows initializing objects in pre-allocated memory.",
          "It automatically deletes objects after use.",
          "It simplifies syntax for object creation.",
          "It provides built-in garbage collection."
        ],
        "correct_option": 0,
        "hint": "This operator is useful for managing memory manually, especially in performance-critical applications."
      },
      {
        "question": "Which of the following C++ features can lead to memory leaks if not used carefully in game development?",
        "options": [
          "Constexpr functions",
          "Smart pointers",
          "Raw pointers",
          "Reference variables"
        ],
        "correct_option": 2,
        "hint": "This feature requires manual memory management and deallocation."
      }
    ]
  }
}