{
  "id": "GD12",
  "name": "C# Programming for Game Development",
  "category": "Game Development",
  "primary_tech": "C#",
  "topics": [
    "C# Language Fundamentals",
    "Object-Oriented Programming (OOP)",
    "Unity API & MonoBehaviour Lifecycle",
    "Data Structures & Algorithms in Games"
  ],
  "recommended": true,
  "tags": [
    "programming",
    "scripting",
    "unity"
  ],
  "resources": {
    "beginner": {
      "docs": [
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/csharp/",
          "description": "Official Microsoft documentation for C# programming language fundamentals and features.",
          "title": "C# Guide - .NET managed language | Microsoft Learn"
        },
        {
          "url": "https://docs.unity.com/",
          "description": "Official documentation for Unity, covering development tools, features, and best practices.",
          "title": "Unity documentation"
        },
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/",
          "description": "Official Microsoft documentation for .NET development, covering languages, APIs, and tools.",
          "title": ".NET documentation | Microsoft Learn"
        },
        {
          "url": "https://docs.godotengine.org/en/4.4/tutorials/scripting/c_sharp/c_sharp_basics.html",
          "description": "An introductory guide to using C# for scripting in Godot Engine.",
          "title": "C# basics ‚Äî Godot Engine (4.4) documentation in English"
        }
      ],
      "notes": [
        {
          "url": "https://www.youtube.com/watch?v=XLW3Biw-a68",
          "description": "A detailed tutorial on implementing a full-stack application using React and Node.js.",
          "title": "Game Progamming with C# Complete Course | C# tutorial for game programming",
          "duration": "605m"
        },
        {
          "url": "https://learn.unity.com/pathway/junior-programmer",
          "description": "An introductory pathway for learning Unity development for aspiring junior programmers.",
          "title": "Junior Programmer Pathway - Learn Coding & Game Development | Unity Learn"
        },
        {
          "url": "https://www.youtube.com/watch?v=TgqAqniukTg",
          "description": "An instructional video on setting up and using Git for version control.",
          "title": "Learn C# Programming Basics for Unity Game Development - Part 1",
          "duration": "12m"
        },
        {
          "url": "https://www.simplilearn.com/tutorials/c-sharp-tutorial/c-sharp-game-programming",
          "description": "An introductory guide to game programming using C#.",
          "title": "An Ultimate Guide To Build C# Game Programming | Simplilearn"
        },
        {
          "url": "https://www.youtube.com/watch?v=VEnZzwW_OJM",
          "description": "An instructional video on using GitHub Copilot for coding assistance in Visual Studio Code.",
          "title": "Unity C# Scripting - Full Game Development Course",
          "duration": "257m"
        },
        {
          "url": "https://discussions.unity.com/t/tutorial-for-starting-2d/908378",
          "description": "A beginner's tutorial for starting 2D game development in Unity.",
          "title": "Tutorial for Starting 2D - Unity Engine - Unity Discussions"
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=XLW3Biw-a68",
          "title": "Game Progamming with C# Complete Course | C# tutorial for game programming",
          "duration": "605m"
        },
        {
          "url": "https://www.youtube.com/watch?v=qZpMX8Re_2Q",
          "title": "Learn C# FREE Tutorial Course Beginner to Advanced! [2025 - 12 HOURS]",
          "duration": "760m"
        },
        {
          "url": "https://www.youtube.com/watch?v=VEnZzwW_OJM",
          "title": "Unity C# Scripting - Full Game Development Course",
          "duration": "257m"
        },
        {
          "url": "https://www.youtube.com/watch?v=TgqAqniukTg",
          "title": "Learn C# Programming Basics for Unity Game Development - Part 1",
          "duration": "12m"
        },
        {
          "url": "https://www.youtube.com/watch?v=1p29y6dvQiI",
          "title": "üïπÔ∏èFull Unity Course - Learn Coding in C# by Building Games",
          "duration": "300m"
        },
        {
          "url": "https://www.youtube.com/watch?v=5DF55w6b4b4",
          "title": "Unity Crash Course for Absolute Beginners! Learn C# and Make Games!!",
          "duration": "70m"
        },
        {
          "url": "https://www.youtube.com/watch?v=AmGSEH7QcDg",
          "title": "Learn Unity Beginner/Intermediate 2025 (FREE COMPLETE Course - Unity Tutorial)",
          "duration": "649m"
        },
        {
          "url": "https://www.youtube.com/watch?v=_cCGBMmMOFw",
          "title": "Introduction to Game Development with Unity and C#",
          "duration": "1m"
        },
        {
          "url": "https://www.youtube.com/watch?v=9tMvzrqBUP8",
          "title": "Learn C# Scripting for Unity in 15 Minutes (2025 Working)",
          "duration": "15m"
        },
        {
          "url": "https://www.youtube.com/c/GameDeveloperTraining"
        }
      ]
    },
    "intermediate": {
      "docs": [
        {
          "url": "https://docs.unity.com/",
          "description": "Official documentation for Unity, covering tools and features for game development.",
          "title": "Unity documentation"
        },
        {
          "url": "https://dev.epicgames.com/documentation/en-us/unreal-engine/epic-cplusplus-coding-standard-for-unreal-engine",
          "description": "A detailed guide to the C++ coding standards for Unreal Engine development.",
          "title": "Just a moment..."
        },
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/csharp/asynchronous-programming/async-scenarios",
          "description": "An overview of common scenarios for using asynchronous programming in C#.",
          "title": "Asynchronous programming scenarios - C# | Microsoft Learn"
        }
      ],
      "notes": [
        {
          "url": "https://tomweiland.net/csharp-networking-tutorial-series/",
          "description": "A detailed tutorial series on networking concepts and implementation in C#."
        },
        {
          "url": "https://github.com/ajcomeau/RogueGameDev",
          "description": "A repository for developing a roguelike game using Python and libtcod.",
          "title": "GitHub - ajcomeau/RogueGameDev: Code for the Rogue C# programming tutorial on ComeauSoftware.com. This will be a roguelike game, currently in development for the course and closely based on the original Rogue. This project does not use AI-generated code."
        },
        {
          "url": "http://rbwhitaker.wikidot.com/c-sharp-tutorials",
          "description": "A collection of tutorials for learning C# programming from basics to advanced topics.",
          "title": "A C# Crash Course - RB Whitaker's Wiki"
        },
        {
          "url": "https://codehs.com/tutorial/mattarnold/unity-coding-part-1",
          "description": "An introductory tutorial on coding with Unity, focusing on the basics for beginners.",
          "title": "Tutorial: Unity Coding - Part 1 | CodeHS"
        },
        {
          "url": "https://gamedevhq.com/c-sharp-switch-statements/",
          "description": "An introductory guide to using switch statements in C# programming.",
          "title": "Learn to Program with C# ‚Äì SWITCH STATEMENTS ‚Äì Unity Tutorial ‚Äì gamedev:hq"
        },
        {
          "url": "https://forum.godotengine.org/t/2d-game-tutorial-script-not-working/81418",
          "description": "A forum discussion troubleshooting issues with a 2D game script in Godot Engine.",
          "title": "2D game tutorial script not working - Help / Programming - Godot Forum"
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=VEnZzwW_OJM",
          "title": "Unity C# Scripting - Full Game Development Course",
          "duration": "257m"
        },
        {
          "url": "https://www.youtube.com/watch?v=DiXQJXz8FOM&pp=0gcJCdgAo7VqN5tD",
          "title": "TOP 10 C# things you MIGHT not know (I didn't!)",
          "duration": "12m"
        },
        {
          "url": "https://www.youtube.com/watch?v=kgShNcTxMIg&pp=0gcJCfwAo7VqN5tD",
          "title": "Create a COMPLETE android & iOS game - FULL COURSE [Unity C#]",
          "duration": "818m"
        },
        {
          "url": "https://www.youtube.com/watch?v=pr5FBtu5SvQ&pp=ygUUI2NvdW50dW5pdHl0ZXN0ZXJkaXk%3D",
          "title": "How to do basic unit testing [Unity/C# tutorial]",
          "duration": "17m"
        },
        {
          "url": "https://www.youtube.com/watch?v=PeojZFlD8yM",
          "title": "Java vs C# in 2025 - Which One Would I Choose?",
          "duration": "5m"
        },
        {
          "url": "https://www.youtube.com/watch?v=GUTURxgcoj4",
          "title": "C# Events in Unity",
          "duration": "8m"
        },
        {
          "url": "https://www.youtube.com/watch?v=ub3P8c87cwk&pp=0gcJCdgAo7VqN5tD",
          "title": "Intro to Unit Testing in C# using XUnit",
          "duration": "102m"
        },
        {
          "url": "https://www.youtube.com/watch?v=0P9S7R00Nt8",
          "title": "AI-assisted coding with GitHub Copilot and ChatGPT 4 in practice",
          "duration": "44m"
        },
        {
          "url": "https://www.youtube.com/watch?v=UyTJLDGcT64",
          "title": "How create a Quest System in Unity | RPG Style | Including Data Persistence",
          "duration": "63m"
        }
      ]
    },
    "advanced": {
      "docs": [
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/csharp/",
          "description": "An official Microsoft guide to programming with C# using .NET.",
          "title": "C# Guide - .NET managed language | Microsoft Learn"
        },
        {
          "url": "https://www.typescriptlang.org/docs/",
          "description": "Official documentation for learning and using TypeScript effectively.",
          "title": "TypeScript: The starting point for learning TypeScript"
        },
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/",
          "description": "Official Microsoft documentation for .NET development and programming resources.",
          "title": ".NET documentation | Microsoft Learn"
        }
      ],
      "notes": [
        {
          "url": "https://www.vintagestory.at/forums/topic/4932-better-modding-guidetutorial/",
          "description": "A detailed guide for enhancing modding skills in Vintage Story.",
          "title": "Just a moment..."
        },
        {
          "url": "https://learn.microsoft.com/en-us/dotnet/csharp/",
          "description": "Official Microsoft documentation for learning C# programming in .NET.",
          "title": "C# Guide - .NET managed language | Microsoft Learn"
        },
        {
          "url": "https://www.youtube.com/jamesmontemagno",
          "description": "A YouTube channel offering tutorials and insights on mobile app development using Xamarin and .NET technologies."
        },
        {
          "url": "https://softwareengineering.stackexchange.com/questions/91976/on-developing-deep-programming-knowledge",
          "description": "A discussion on strategies for developing deep programming knowledge.",
          "title": "Just a moment..."
        },
        {
          "url": "https://unity.com/how-to",
          "description": "An instructional resource offering step-by-step guides for using Unity's tools and features.",
          "title": "Access Denied"
        },
        {
          "url": "https://gamedevhq.com/c-sharp-interfaces/",
          "description": "An introduction to C# interfaces and their implementation in game development.",
          "title": "Learn to Program with C#: Interfaces ‚Äì Advanced Unity Tutorial ‚Äì gamedev:hq"
        },
        {
          "url": "https://newsletter.pragmaticengineer.com/p/building-a-simple-game",
          "description": "A detailed guide on creating a simple game using practical engineering techniques.",
          "title": "Building a Simple Game"
        }
      ],
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=qZpMX8Re_2Q",
          "title": "Learn C# FREE Tutorial Course Beginner to Advanced! [2025 - 12 HOURS]",
          "duration": "760m"
        },
        {
          "url": "https://www.youtube.com/watch?v=AmGSEH7QcDg",
          "title": "Learn Unity Beginner/Intermediate 2025 (FREE COMPLETE Course - Unity Tutorial)",
          "duration": "649m"
        },
        {
          "url": "https://www.youtube.com/watch?v=6G-4oPDxfNI",
          "title": "Learn C# Advanced FREE Tutorial Course! [2025]",
          "duration": "274m"
        },
        {
          "url": "https://www.youtube.com/watch?v=OSw0fU1AMII",
          "title": "C# Reflection in Unity: A Complete Guide for Game Developers",
          "duration": "21m"
        },
        {
          "url": "https://www.youtube.com/watch?v=M5ugY7fWydE",
          "title": "C# Full Course : C# Tutorial for Beginners",
          "duration": "538m"
        },
        {
          "url": "https://www.youtube.com/watch?v=VEnZzwW_OJM",
          "title": "Unity C# Scripting - Full Game Development Course",
          "duration": "257m"
        },
        {
          "url": "https://www.youtube.com/watch?v=GGob3dGP5hw",
          "title": "Create a simple space battle shooter game with WPF C# in visual studio",
          "duration": "38m"
        },
        {
          "url": "https://www.youtube.com/watch?v=5DF55w6b4b4",
          "title": "Unity Crash Course for Absolute Beginners! Learn C# and Make Games!!",
          "duration": "70m"
        },
        {
          "url": "https://www.youtube.com/watch?v=YT8s-90oDC0",
          "title": "Advanced C# Programming Course",
          "duration": "907m"
        }
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is the correct syntax to declare a variable of type integer in C#?",
        "options": [
          "int number;",
          "integer number;",
          "var number : int;",
          "number int;"
        ],
        "correct_option": 0,
        "hint": "The syntax starts with the type followed by the variable name."
      },
      {
        "question": "Which of the following is NOT a principle of Object-Oriented Programming?",
        "options": [
          "Encapsulation",
          "Abstraction",
          "Iteration",
          "Polymorphism"
        ],
        "correct_option": 2,
        "hint": "This term is more related to loops than OOP."
      },
      {
        "question": "In Unity, which method is called once per frame?",
        "options": [
          "Start()",
          "Update()",
          "Awake()",
          "FixedUpdate()"
        ],
        "correct_option": 1,
        "hint": "This method updates the game logic frame by frame."
      },
      {
        "question": "What is the purpose of the 'using' directive in C#?",
        "options": [
          "To declare a new class",
          "To import namespaces",
          "To create a loop",
          "To define a method"
        ],
        "correct_option": 1,
        "hint": "It helps in accessing classes and functions from different namespaces."
      },
      {
        "question": "Which data structure is best for storing a collection of unique elements in C#?",
        "options": [
          "List",
          "Queue",
          "Stack",
          "HashSet"
        ],
        "correct_option": 3,
        "hint": "This data structure does not allow duplicate values."
      }
    ],
    "intermediate": [
      {
        "question": "Which of the following is a key concept of Object-Oriented Programming in C#?",
        "options": [
          "Encapsulation",
          "Compilation",
          "Iteration",
          "Recursion"
        ],
        "correct_option": 0,
        "hint": "This concept involves bundling the data and methods that work on the data within one unit, like a class."
      },
      {
        "question": "In Unity, what is the role of the Start() method in a MonoBehaviour script?",
        "options": [
          "It initializes variables or game state before the game starts.",
          "It is called once per frame to update the game.",
          "It is used to destroy game objects.",
          "It handles physics-related calculations."
        ],
        "correct_option": 0,
        "hint": "This method is typically used to set up any initialization before the game begins."
      },
      {
        "question": "Which C# data structure is most efficient for accessing elements by index?",
        "options": [
          "Queue",
          "Stack",
          "LinkedList",
          "Array"
        ],
        "correct_option": 3,
        "hint": "This data structure allows fast access using indices thanks to contiguous memory allocation."
      },
      {
        "question": "In C# programming, what is the benefit of using an interface?",
        "options": [
          "To allow multiple inheritance",
          "To provide a default implementation",
          "To define a contract for classes",
          "To store objects of different types"
        ],
        "correct_option": 2,
        "hint": "This feature is often used to ensure that different classes implement the same methods."
      },
      {
        "question": "What is the primary purpose of the Update() method in a Unity MonoBehaviour script?",
        "options": [
          "To initialize game settings",
          "To handle fixed time updates",
          "To render graphics",
          "To run game logic continuously every frame"
        ],
        "correct_option": 3,
        "hint": "This method is used to execute code that needs to be checked or updated every frame."
      }
    ],
    "advanced": [
      {
        "question": "What is the primary purpose of the 'yield return' statement in C# when used in a Unity Coroutine?",
        "options": [
          "To pause the execution and resume later without blocking the main thread",
          "To immediately terminate the Coroutine",
          "To convert the Coroutine into a standard method",
          "To create a new thread for parallel execution"
        ],
        "correct_option": 0,
        "hint": "It allows for non-blocking delays in the execution of Coroutines."
      },
      {
        "question": "In C#, which of the following is NOT a characteristic of an interface?",
        "options": [
          "Interfaces can define default method implementations.",
          "Interfaces can inherit from other interfaces.",
          "Interfaces cannot contain fields.",
          "Interfaces provide a contract for classes to implement."
        ],
        "correct_option": 0,
        "hint": "Consider what is allowed within interface definitions in C#."
      },
      {
        "question": "How does the 'Awake' method differ from the 'Start' method in the MonoBehaviour lifecycle?",
        "options": [
          "Awake is called once per frame, Start only once.",
          "Awake is called before all Start methods and is used for initialization.",
          "Start is called before Awake and is used for initial setup.",
          "Awake is called multiple times per object, Start only once."
        ],
        "correct_option": 1,
        "hint": "One method is generally used for early initialization before the game starts."
      },
      {
        "question": "Which data structure would be most efficient for implementing a leaderboard in a game where the top scores need frequent access and updates?",
        "options": [
          "Array",
          "Stack",
          "Binary Search Tree",
          "Linked List"
        ],
        "correct_option": 2,
        "hint": "Consider data structures that allow for efficient sorting and retrieval."
      },
      {
        "question": "Which of the following C# features allows a class to inherit the implementation of methods from multiple classes?",
        "options": [
          "Multiple inheritance",
          "Interfaces",
          "Abstract classes",
          "Delegates"
        ],
        "correct_option": 1,
        "hint": "C# does not support multiple inheritance, but another feature can achieve a similar result."
      }
    ]
  }
}