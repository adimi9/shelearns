{
  "id": "GD1",
  "name": "Game Graphics & Rendering Basics",
  "category": "Game Development",
  "primary_tech": "Graphics Programming",
  "topics": [
    "Rendering Pipeline Overview",
    "Vertex & Fragment Shaders (HLSL/GLSL)",
    "Texture Mapping & Materials",
    "Lighting Models (Phong, PBR basics)"
  ],
  "recommended": false,
  "tags": [
    "graphics",
    "rendering",
    "shaders",
    "VFX"
  ],
  "resources": {
    "beginner": {
      "docs": [
        "https://dev.epicgames.com/documentation/en-us/unreal-engine/unreal-engine-5-6-documentation",
        "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API",
        "https://learn.microsoft.com/en-us/windows/win32/direct3d12/directx-12-programming-guide",
        "https://docs.unity3d.com/6000.1/Documentation/Manual/UnityManual.html",
        "https://vulkan-tutorial.com/"
      ],
      "notes": [
        "https://www.youtube.com/watch?v=Mg4b7EyGgEU",
        "https://erkaman.github.io/posts/beginner_computer_graphics.html",
        "https://www.youtube.com/watch?v=fBQvL5YR3eg&pp=0gcJCfwAo7VqN5tD",
        "https://learncodebygaming.com/blog/how-to-make-a-video-game-in-java-2d-basics",
        "https://www.youtube.com/watch?v=2gABYM5M0ww"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=kfM-yu0iQBk",
        "https://www.youtube.com/watch?v=Mg4b7EyGgEU",
        "https://www.youtube.com/watch?v=fBQvL5YR3eg&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=2gABYM5M0ww",
        "https://www.youtube.com/watch?v=AmGSEH7QcDg",
        "https://www.youtube.com/watch?v=B0J27sf9N1Y",
        "https://www.youtube.com/watch?v=XOs2qynEmNE",
        "https://www.youtube.com/watch?v=y2UsQB3WSvo&pp=ygUWI3dlYl9zbGluZ19jb2xvdXJfY29kZQ%3D%3D",
        "https://www.youtube.com/watch?v=025QFeZfeyM",
        "https://www.youtube.com/watch?v=5PAg1lGgD5M"
      ]
    },
    "intermediate": {
      "docs": [
        "https://docs.unity.com/",
        "https://dev.epicgames.com/documentation/en-us/unreal-engine/nanite-virtualized-geometry-in-unreal-engine",
        "https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API",
        "https://docs.nvidia.com/nsight-graphics/UserGuide/",
        "https://docs.unity3d.com/6000.1/Documentation/Manual/2d-game-creation-wokflow.html"
      ],
      "notes": [
        "https://edw.is/learning-vulkan/",
        "https://erkaman.github.io/posts/beginner_computer_graphics.html",
        "https://therealmjp.github.io/posts/sss-intro/",
        "https://cgcookie.com/posts/blender-cycles-vs-eevee-15-limitations-of-real-time-rendering",
        "https://halisavakis.com/my-take-on-shaders-compute-shaders/"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=4ZYn9sR3btg&pp=0gcJCX4JAYcqIYzv",
        "https://www.youtube.com/watch?v=8OMghdHP-zs",
        "https://www.youtube.com/watch?v=ke5KpqcoiIU",
        "https://www.youtube.com/watch?v=k-zMkzmduqI",
        "https://www.youtube.com/watch?v=wqjJU4V6bGM",
        "https://www.youtube.com/watch?v=kgShNcTxMIg&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=KkLj5gzZff0",
        "https://www.youtube.com/channel/UCHmAXsicpLK2EHMZo5_BtDA",
        "https://www.youtube.com/watch?v=oiuHSAwiz1c"
      ]
    },
    "advanced": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API",
        "https://whoisryosuke.com/blog/2023/learning-directx-12-in-2023",
        "https://alextardif.com/LearningGraphics.html",
        "https://docs.nvidia.com/nsight-graphics/UserGuide/"
      ],
      "notes": [
        "https://www.youtube.com/watch?v=AmGSEH7QcDg",
        "https://edw.is/learning-vulkan/",
        "https://www.youtube.com/watch?v=gG7ZoP3fd1w&pp=0gcJCfwAo7VqN5tD",
        "https://alextardif.com/LearningGraphics.html",
        "https://www.youtube.com/watch?v=TUmiAdqMhD8",
        "https://github.com/prographon/graphics-developer-roadmap",
        "https://www.stefanpijnacker.nl/article/graphics-programming-where-to-start/"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=AmGSEH7QcDg",
        "https://www.youtube.com/watch?v=gG7ZoP3fd1w&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=8v7DkX4NDxs&pp=0gcJCdgAo7VqN5tD",
        "https://www.youtube.com/watch?v=TUmiAdqMhD8",
        "https://www.youtube.com/watch?v=dj4kNnj4FAQ",
        "https://www.youtube.com/watch?v=qDHnCFMZ9HA&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=S4V-Yod_nws",
        "https://www.youtube.com/watch?v=eviSykqSUUw",
        "https://www.youtube.com/watch?v=ke5KpqcoiIU",
        "https://www.youtube.com/c/StylizedStation"
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is the primary purpose of the rendering pipeline in graphics programming?",
        "options": [
          "To process images after they are displayed",
          "To convert 3D models into 2D images",
          "To enhance the color of images",
          "To store graphical assets"
        ],
        "correct_option": 1,
        "hint": "Think about the transformation of 3D data to a 2D screen representation."
      },
      {
        "question": "Which shader is responsible for calculating the color of pixels on the screen?",
        "options": [
          "Vertex Shader",
          "Geometry Shader",
          "Fragment Shader",
          "Compute Shader"
        ],
        "correct_option": 2,
        "hint": "This shader works with fragments or pixels."
      },
      {
        "question": "What is the role of texture mapping in rendering?",
        "options": [
          "To define the shape of 3D models",
          "To apply images to 3D surfaces",
          "To increase rendering speed",
          "To calculate lighting effects"
        ],
        "correct_option": 1,
        "hint": "It's about applying images to surfaces."
      },
      {
        "question": "Which lighting model is known for simulating the way light interacts with rough surfaces to create realistic textures?",
        "options": [
          "Phong Lighting Model",
          "Blinn-Phong Model",
          "Flat Shading",
          "Physically Based Rendering (PBR)"
        ],
        "correct_option": 3,
        "hint": "This model focuses on realism through physical properties."
      },
      {
        "question": "In graphics programming, what language is commonly used for writing shaders?",
        "options": [
          "Java",
          "Python",
          "GLSL/HLSL",
          "C++"
        ],
        "correct_option": 2,
        "hint": "These languages are specifically designed for graphics pipelines."
      }
    ],
    "intermediate": [
      {
        "question": "What is the main purpose of the rendering pipeline in computer graphics?",
        "options": [
          "To convert 3D models into 2D images",
          "To store textures and materials",
          "To manage memory allocation",
          "To handle network communications"
        ],
        "correct_option": 0,
        "hint": "Think about the transformation from 3D to 2D space."
      },
      {
        "question": "Which shader is responsible for determining the color of each pixel?",
        "options": [
          "Vertex Shader",
          "Geometry Shader",
          "Fragment Shader",
          "Compute Shader"
        ],
        "correct_option": 2,
        "hint": "This shader operates at the pixel level."
      },
      {
        "question": "In the context of texture mapping, what does UV mapping refer to?",
        "options": [
          "The process of creating light maps",
          "The process of mapping 3D coordinates to 2D texture space",
          "The calculation of normal vectors",
          "The generation of procedural textures"
        ],
        "correct_option": 1,
        "hint": "It involves converting 3D coordinates to a 2D plane."
      },
      {
        "question": "What is the primary difference between Phong and PBR lighting models?",
        "options": [
          "Phong simulates realistic reflection, PBR does not",
          "PBR uses physical properties, Phong does not",
          "Phong is used in rasterization, PBR in ray tracing only",
          "PBR is older than Phong"
        ],
        "correct_option": 1,
        "hint": "Consider the basis of realism and physical accuracy."
      },
      {
        "question": "Which programming language is commonly used for writing both vertex and fragment shaders?",
        "options": [
          "Python",
          "Java",
          "GLSL",
          "HTML"
        ],
        "correct_option": 2,
        "hint": "This language is designed specifically for graphics programming."
      }
    ],
    "advanced": [
      {
        "question": "Which stage in the rendering pipeline is responsible for transforming 3D coordinates to 2D coordinates on the screen?",
        "options": [
          "Vertex Shader",
          "Fragment Shader",
          "Rasterization",
          "Clipping"
        ],
        "correct_option": 2,
        "hint": "It is the stage after vertex processing that converts vector information to pixel information."
      },
      {
        "question": "In HLSL, which semantic is used to pass the position of a vertex from the vertex shader to the next stage in the pipeline?",
        "options": [
          "SV_Position",
          "POSITION",
          "TEXCOORD",
          "COLOR"
        ],
        "correct_option": 0,
        "hint": "It is a system-value semantic used specifically in Direct3D for vertex positions."
      },
      {
        "question": "What is the primary purpose of a fragment shader in the graphics rendering pipeline?",
        "options": [
          "Determine the color of each pixel",
          "Transform vertices",
          "Handle texture mapping",
          "Perform depth testing"
        ],
        "correct_option": 0,
        "hint": "This shader is responsible for processing fragments to generate final pixel colors."
      },
      {
        "question": "Which lighting model is based on the concept of energy conservation and uses reflectance functions to simulate realistic lighting?",
        "options": [
          "Phong",
          "Blinn-Phong",
          "Lambertian",
          "Physically Based Rendering (PBR)"
        ],
        "correct_option": 3,
        "hint": "This model is designed to accurately simulate the flow of light in real-world scenarios."
      },
      {
        "question": "In texture mapping, what technique is used to reduce aliasing artifacts when a texture is viewed at a steep angle or from a distance?",
        "options": [
          "Bilinear filtering",
          "Trilinear filtering",
          "Anisotropic filtering",
          "Nearest-neighbor filtering"
        ],
        "correct_option": 2,
        "hint": "This filtering technique enhances image quality by taking into account the texture's angle relative to the view."
      }
    ]
  }
}