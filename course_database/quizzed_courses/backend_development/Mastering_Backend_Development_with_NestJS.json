{
  "id": "BE17",
  "name": "Mastering Backend Development with NestJS",
  "category": "Backend Development",
  "primary_tech": "NestJS",
  "topics": [
    "Introduction to NestJS and its Architecture",
    "Setting Up a NestJS Project with TypeScript",
    "Understanding and Implementing Dependency Injection",
    "Building RESTful APIs using NestJS",
    "Database Integration and ORM with TypeORM",
    "Implementing Authentication and Authorization",
    "Creating and Managing Microservices",
    "Error Handling and Logging in NestJS"
  ],
  "recommended": false,
  "tags": [
    "nestjs",
    "backend",
    "typescript",
    "dependency-injection",
    "microservices",
    "api-development"
  ],
  "resources": {
    "beginner": {
      "docs": [
        "https://www.youtube.com/watch?v=8_X0nSrzrCw",
        "https://m.youtube.com/watch?v=juNVinepwKA",
        "https://www.youtube.com/watch?v=6He5Gyuuvxk",
        "https://courses.nestjs.com/",
        "https://firebase.google.com/docs"
      ],
      "notes": [
        "https://www.youtube.com/watch?v=8_X0nSrzrCw",
        "https://masteringbackend.com/posts/backend-development-ultimate-guide",
        "https://www.youtube.com/watch?v=cAj6gzAMNfA",
        "https://courses.nestjs.com/",
        "https://www.evergrowingdev.com/p/6-best-online-resources-to-learn",
        "https://www.linkedin.com/posts/roshnivr_namaste-node-js-activity-7230877058720010240-cPyw"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=8_X0nSrzrCw",
        "https://www.youtube.com/watch?v=cAj6gzAMNfA",
        "https://www.youtube.com/watch?v=9BD9eK9VqXA",
        "https://www.youtube.com/watch?v=sFnAHC9lLaw",
        "https://m.youtube.com/watch?v=dP_QfmnghnQ",
        "https://www.youtube.com/watch?v=T49rxi1tQpE",
        "https://www.youtube.com/watch?v=UgX5lgv4uVM&pp=0gcJCfwAo7VqN5tD",
        "https://www.youtube.com/watch?v=f2EqECiTBL8",
        "https://www.youtube.com/c/programmingwithmosh",
        "https://www.youtube.com/@procademy"
      ]
    },
    "intermediate": {
      "docs": [
        "https://github.com/nestjs/awesome-nestjs",
        "https://firebase.google.com/docs",
        "https://learn.microsoft.com/en-us/azure/api-management/api-management-key-concepts",
        "https://docs.nestjs.com/recipes/cqrs",
        "https://shopify.dev/docs/api"
      ],
      "notes": [
        "https://www.linkedin.com/posts/nishant-tiwari24_21st-july-2023-the-next-day-after-wasting-activity-7221362157257474051-hhVb",
        "https://github.com/nestjs/awesome-nestjs",
        "https://masteringbackend.com/posts/backend-development-ultimate-guide",
        "https://github.com/unusualcodeorg/wimm-node-app",
        "https://www.facebook.com/groups/2151269675001891/posts/4032854283510078/",
        "https://www.djamware.com/post/6865112f09c9304f72317be7/understanding-dependency-injection-in-nestjs",
        "https://stackoverflow.com/questions/51197940/file-name-differs-from-already-included-file-name-only-in-casing-on-relative-p"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=rOpEN1JDaD0",
        "https://m.youtube.com/watch?v=843nec-IvW0",
        "https://www.youtube.com/watch?v=U6LbW2IFUQw",
        "https://www.youtube.com/watch?v=GTDYsV5pyZU",
        "https://www.youtube.com/watch?v=iYX-3hCVmK8",
        "https://www.youtube.com/watch?v=JyolNYRbAcs&pp=0gcJCf0Ao7VqN5tD",
        "https://www.youtube.com/watch?v=3289vhOUdKA",
        "https://www.youtube.com/watch?v=qwfE7fSVaZM"
      ]
    },
    "advanced": {
      "docs": [
        "https://courses.nestjs.com/",
        "https://github.com/nestjs/awesome-nestjs",
        "https://www.freecodecamp.org/news/become-a-full-stack-developer-and-get-a-job/",
        "https://www.linkedin.com/posts/roshnivr_namaste-node-js-activity-7230877058720010240-cPyw",
        "https://grafana.com/docs/k6/latest/"
      ],
      "notes": [
        "https://masteringbackend.com/posts/nestjs-typescrpt-ultimate-guide",
        "https://courses.nestjs.com/",
        "https://masteringbackend.com/posts/backend-development-ultimate-guide",
        "https://www.linkedin.com/posts/roshnivr_namaste-node-js-activity-7230877058720010240-cPyw",
        "https://www.tomray.dev/nestjs-course",
        "https://code99.io/blogs"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=8_X0nSrzrCw",
        "https://www.youtube.com/watch?v=TOmbaKtcpUg",
        "https://www.youtube.com/watch?v=yuVVKB0EaOQ",
        "https://www.youtube.com/watch?v=dP_QfmnghnQ&pp=0gcJCU8JAYcqIYzv",
        "https://www.youtube.com/watch?v=UuYH37ihmIs",
        "https://www.youtube.com/watch?v=Idu7XNFi31c",
        "https://www.youtube.com/watch?v=rlYVelhroDU",
        "https://www.youtube.com/watch?v=T49rxi1tQpE",
        "https://www.youtube.com/watch?v=UgX5lgv4uVM",
        "https://www.youtube.com/watch?v=0ap-bTGNZF0"
      ]
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What is the main architectural pattern that NestJS is built on?",
        "options": [
          "Model-View-Controller (MVC)",
          "Event-Driven Architecture",
          "Microservices Architecture",
          "Dependency Injection"
        ],
        "correct_option": 0,
        "hint": "This pattern is commonly used to separate concerns in web applications."
      },
      {
        "question": "Which command is used to create a new NestJS project with TypeScript?",
        "options": [
          "nest new project-name",
          "nestjs create project-name",
          "npm init nest project-name",
          "ng new project-name"
        ],
        "correct_option": 0,
        "hint": "The command starts with the NestJS CLI keyword."
      },
      {
        "question": "What is Dependency Injection in NestJS used for?",
        "options": [
          "To directly manipulate the DOM",
          "To inject dependencies into a service or controller",
          "To handle HTTP requests",
          "To compile TypeScript code"
        ],
        "correct_option": 1,
        "hint": "It's a design pattern that helps manage class dependencies."
      },
      {
        "question": "Which module in NestJS is primarily used for creating RESTful APIs?",
        "options": [
          "HttpModule",
          "RestModule",
          "ApiModule",
          "ControllerModule"
        ],
        "correct_option": 3,
        "hint": "Controllers in NestJS are used to handle incoming requests."
      },
      {
        "question": "Which of the following is a common ORM used with NestJS for database integration?",
        "options": [
          "Sequelize",
          "TypeORM",
          "Mongoose",
          "Django ORM"
        ],
        "correct_option": 1,
        "hint": "This ORM is known for supporting TypeScript natively."
      }
    ],
    "intermediate": [
      {
        "question": "What is the primary advantage of using NestJS's modular architecture?",
        "options": [
          "Improved performance",
          "Enhanced maintainability and scalability",
          "Faster execution of code",
          "Reduced memory usage"
        ],
        "correct_option": 1,
        "hint": "Consider how NestJS manages different application features and organizes code."
      },
      {
        "question": "Which command is used to create a new NestJS project with TypeScript?",
        "options": [
          "nest new project-name",
          "nestjs create project-name",
          "nest create project-name",
          "nestjs new project-name"
        ],
        "correct_option": 0,
        "hint": "The command starts with 'nest' and is followed by 'new'."
      },
      {
        "question": "How does NestJS implement Dependency Injection?",
        "options": [
          "Using the Singleton pattern",
          "Via manual object creation",
          "Through a built-in IoC container",
          "By utilizing higher-order functions"
        ],
        "correct_option": 2,
        "hint": "NestJS uses a container to manage dependencies automatically."
      },
      {
        "question": "Which decorator is used to define a route in a NestJS controller for handling HTTP GET requests?",
        "options": [
          "@Post()",
          "@Get()",
          "@Query()",
          "@Param()"
        ],
        "correct_option": 1,
        "hint": "Think about the HTTP method that retrieves data."
      },
      {
        "question": "What role does TypeORM play in a NestJS application?",
        "options": [
          "It acts as a middleware for authentication",
          "It facilitates ORM for database interactions",
          "It handles HTTP request routing",
          "It manages error logging"
        ],
        "correct_option": 1,
        "hint": "Consider what ORM stands for and its purpose in applications."
      }
    ],
    "advanced": [
      {
        "question": "What is the core principle behind NestJS's architecture that helps in building scalable server-side applications?",
        "options": [
          "Modular architecture",
          "Functional programming",
          "Singleton pattern",
          "Event-driven design"
        ],
        "correct_option": 0,
        "hint": "It involves organizing code into self-contained units."
      },
      {
        "question": "In a NestJS project, where would you typically configure the TypeORM settings for database connection?",
        "options": [
          "app.module.ts",
          "typeorm.config.ts",
          "database.module.ts",
          "ormconfig.json"
        ],
        "correct_option": 3,
        "hint": "It's a JSON file commonly used for ORM configuration."
      },
      {
        "question": "Which NestJS feature allows the injection of dependencies into classes to promote reusability and testability?",
        "options": [
          "Middleware",
          "Guards",
          "Providers",
          "Interceptors"
        ],
        "correct_option": 2,
        "hint": "This feature typically uses decorators to define dependencies."
      },
      {
        "question": "How does NestJS facilitate the creation of RESTful APIs, specifically in terms of request handling?",
        "options": [
          "Utilizes GraphQL resolvers",
          "Uses TypeScript decorators",
          "Employs event emitters",
          "Leverages middleware for authentication"
        ],
        "correct_option": 1,
        "hint": "Decorators are a key feature in TypeScript used for defining routes."
      },
      {
        "question": "When implementing authentication in a NestJS application, which module is crucial for securing endpoints and managing user sessions?",
        "options": [
          "PassportModule",
          "JwtModule",
          "AuthModule",
          "RolesGuard"
        ],
        "correct_option": 2,
        "hint": "This module often integrates Passport and JWT for handling authentication. It is a custom module typically created by the developer."
      }
    ]
  },
  "preferred_if": [
    "User prefers TypeScript",
    "Building enterprise-grade applications"
  ]
}