{
  "id": "FE4",
  "name": "JAMstack & Headless CMSs",
  "category": "Frontend Development",
  "primary_tech": "JAMstack",
  "topics": [
    "Static Site Generators",
    "Integrating Headless CMS",
    "Deployment"
  ],
  "recommended": false,
  "tags": [
    "static",
    "cms",
    "deployment"
  ],
  "resources": {
    "beginner": {
      "docs": [
        "https://jamstack.org/headless-cms/",
        "https://gridsome.org/docs/",
        "https://jamstack.org/generators/"
      ],
      "notes": [
        "https://jamstack.org/headless-cms/",
        "https://www.sanity.io/headless-cms",
        "https://strapi.io/blog/jamstack",
        "https://www.netlify.com/blog/complete-guide-to-headless-cms/",
        "https://www.smashingmagazine.com/categories/headless/",
        "https://snipcart.com/blog/jamstack",
        "https://hygraph.com/sitemap"
      ],
      "videos": [
        "https://www.youtube.com/watch?v=vOzAuNr_PSc"
      ]
    },
    "intermediate": {
      "docs": [
        "https://jamstack.org/headless-cms/",
        "https://hygraph.com/blog/nextjs-cms",
        "https://www.smashingmagazine.com/2021/08/history-future-jamstack-cms/",
        "https://hygraph.com/blog/headless-cms-example"
      ],
      "notes": [
        "https://jamstack.org/headless-cms/",
        "https://css-tricks.com/jamstack-cmss-have-finally-grown-up/",
        "https://www.sanity.io/headless-cms",
        "https://www.zesty.io/mindshare/headless/what-is-jamstack/",
        "https://commercelayer.io/blog/static-is-the-new-dynamic",
        "https://www.zesty.io/mindshare/marketing-trends/jamstack-pros-and-cons-for-enterprise/",
        "https://snipcart.com/blog/wordpress-vue-headless"
      ],
      "videos": []
    },
    "advanced": {
      "docs": [
        "https://buttercms.com/blog/understanding-headless-architecture/",
        "https://hygraph.com/blog/nextjs-cms",
        "https://focusreactive.com/blog/",
        "https://hygraph.com/sitemap"
      ],
      "notes": [
        "https://www.netlify.com/blog/complete-guide-to-headless-cms/",
        "https://snipcart.com/blog/react-graphql-grav-cms-headless-tutorial",
        "https://www.smashingmagazine.com/categories/static-generators/",
        "https://ellessmedia.com/csi/deane-barker/",
        "https://cloudcannon.com/blog/learning-web-development-a-self-guided-roadmap/",
        "https://hygraph.com/sitemap",
        "https://bejamas.com/hub/guides/self-hosted-cms"
      ],
      "videos": []
    }
  },
  "quiz": {
    "beginner": [
      {
        "question": "What does the 'J' in JAMstack stand for?",
        "options": [
          "JavaScript",
          "Java",
          "Jenkins",
          "JQuery"
        ],
        "correct_option": 0,
        "hint": "It is a popular programming language used for web development."
      },
      {
        "question": "Which of the following is a primary benefit of using a Headless CMS?",
        "options": [
          "Direct database editing",
          "Coupled front-end and back-end",
          "Decoupled architecture",
          "Integrated email server"
        ],
        "correct_option": 2,
        "hint": "It allows for more flexibility by separating content management from front-end rendering."
      },
      {
        "question": "What is the role of Static Site Generators in JAMstack?",
        "options": [
          "To generate dynamic server pages",
          "To compile and deliver pre-rendered pages",
          "To manage databases",
          "To create server-side APIs"
        ],
        "correct_option": 1,
        "hint": "They pre-render HTML pages at build time."
      },
      {
        "question": "Which of these is a popular tool for deploying JAMstack sites?",
        "options": [
          "Netlify",
          "Oracle Cloud",
          "Apache Server",
          "IBM Cloud"
        ],
        "correct_option": 0,
        "hint": "This platform is known for its ease of use in deploying static websites."
      },
      {
        "question": "In the context of JAMstack, what does 'M' typically refer to?",
        "options": [
          "MongoDB",
          "Markdown",
          "Middleware",
          "MySQL"
        ],
        "correct_option": 1,
        "hint": "It's a lightweight markup language often used for formatting text."
      }
    ],
    "intermediate": [
      {
        "question": "What is one of the main benefits of using Static Site Generators in JAMstack architecture?",
        "options": [
          "Faster page loads due to pre-rendered HTML",
          "Real-time content updates without redeployment",
          "Direct database access for dynamic content",
          "Built-in authentication systems"
        ],
        "correct_option": 0,
        "hint": "Think about how pre-rendering affects performance."
      },
      {
        "question": "Which part of the JAMstack does Strapi typically represent when used in a project?",
        "options": [
          "JavaScript",
          "APIs",
          "Markup",
          "Headless CMS"
        ],
        "correct_option": 3,
        "hint": "Strapi is used to manage content."
      },
      {
        "question": "When integrating a Headless CMS with a JAMstack site, what is a common method for fetching content?",
        "options": [
          "Direct SQL queries",
          "Using RESTful or GraphQL APIs",
          "Embedding content via iframes",
          "Utilizing server-side scripting"
        ],
        "correct_option": 1,
        "hint": "Consider how modern web applications communicate with external services."
      },
      {
        "question": "Which deployment platform is specifically optimized for JAMstack applications?",
        "options": [
          "Heroku",
          "Vercel",
          "AWS Lambda",
          "Docker Hub"
        ],
        "correct_option": 1,
        "hint": "This platform is known for its seamless integration with static site generators and serverless functions."
      },
      {
        "question": "In JAMstack, what does the 'M' typically stand for?",
        "options": [
          "Markdown",
          "Middleware",
          "Machine Learning",
          "Markup"
        ],
        "correct_option": 3,
        "hint": "It's related to the structure of web pages."
      }
    ],
    "advanced": [
      {
        "question": "Which of the following is NOT a primary purpose of using a Static Site Generator in JAMstack?",
        "options": [
          "Improving website speed by pre-rendering pages",
          "Enhancing website security by minimizing server-side logic",
          "Facilitating real-time dynamic content updates",
          "Reducing server costs by serving static assets"
        ],
        "correct_option": 2,
        "hint": "Consider the core advantage of pre-rendered content in JAMstack architecture."
      },
      {
        "question": "When integrating a Headless CMS with a JAMstack architecture, which method is commonly used to fetch content at build time?",
        "options": [
          "Server-side rendering",
          "Client-side AJAX requests",
          "Static site generation",
          "WebSocket connections"
        ],
        "correct_option": 2,
        "hint": "Think about the process that involves fetching data before deployment."
      },
      {
        "question": "In the JAMstack architecture, what role does the 'A' in the acronym typically play?",
        "options": [
          "Authentication",
          "API",
          "Angular",
          "Asynchronous processes"
        ],
        "correct_option": 1,
        "hint": "This component is essential for connecting the frontend with back-end services and data."
      },
      {
        "question": "Which of the following deployment strategies is most aligned with JAMstack principles?",
        "options": [
          "Deploying to a traditional LAMP stack server",
          "Using continuous deployment with a CDN for static assets",
          "Hosting on a dedicated server with dynamic content",
          "Utilizing server-side rendering with Node.js"
        ],
        "correct_option": 1,
        "hint": "Consider how JAMstack emphasizes the use of static files and CDN for delivery."
      },
      {
        "question": "How does the 'Headless' approach in CMS benefit a JAMstack application?",
        "options": [
          "It allows for integration of server-side logic with client-side rendering.",
          "It provides a tightly coupled backend and frontend, simplifying deployments.",
          "It enables decoupling the content management from frontend presentation.",
          "It ensures faster page load times by eliminating the need for a database."
        ],
        "correct_option": 2,
        "hint": "Focus on the separation of concerns between content management and presentation layers."
      }
    ]
  }
}