{
  "id": "FE5",
  "name": "Angular Basics",
  "category": "Frontend Development",
  "primary_tech": "Angular",
  "topics": [
    "TypeScript in Angular",
    "Components & Templates",
    "RxJS & Services"
  ],
  "levels": [
    "Beginner",
    "Intermediate",
    "Advanced"
  ],
  "recommended": false,
  "tags": [
    "framework",
    "SPA",
    "TypeScript-based"
  ],
  "alternatives": [
    {
      "tech": "React.js",
      "reason": "Simpler, more flexible SPA framework",
      "tags": [
        "framework",
        "SPA"
      ],
      "preferred_if": [
        "User wants more flexibility"
      ],
      "alternative_quiz": [
        {
          "question": "What is a key feature of React.js that makes it simpler and more flexible compared to other SPA frameworks?",
          "options": [
            "Two-way data binding",
            "Virtual DOM",
            "Built-in state management",
            "Automatic form handling"
          ],
          "correct_option": 1,
          "hint": "This feature allows React to efficiently update and render UI components."
        },
        {
          "question": "Which of the following is a primary reason developers choose React.js for building SPAs?",
          "options": [
            "Strict structure and conventions",
            "In-built routing system",
            "Flexibility in component design",
            "Server-side rendering by default"
          ],
          "correct_option": 2,
          "hint": "Developers often appreciate the ability to structure their applications as they see fit."
        },
        {
          "question": "In React.js, what is the primary way to manage component logic and state?",
          "options": [
            "Lifecycle methods",
            "Redux",
            "Hooks",
            "Mixins"
          ],
          "correct_option": 2,
          "hint": "This feature was introduced in React 16.8 to allow functional components to manage state and side effects."
        },
        {
          "question": "What does JSX stand for in the context of React.js?",
          "options": [
            "JavaScript XML",
            "JavaScript eXtension",
            "Java Syntax eXtension",
            "JavaScript Xperience"
          ],
          "correct_option": 0,
          "hint": "It is a syntax extension that allows writing HTML-like code in JavaScript."
        },
        {
          "question": "Why might a developer prefer React.js over other frameworks when building a single-page application (SPA)?",
          "options": [
            "It enforces a strict MVC pattern",
            "It provides more flexibility in choosing additional libraries",
            "It comes with a complete toolchain out of the box",
            "It requires less JavaScript knowledge"
          ],
          "correct_option": 1,
          "hint": "React.js is often used with various libraries to handle tasks like routing and state management, allowing for customization."
        }
      ],
      "resources": {
        "docs": [
          "https://reactjs.org/",
          "https://reactjs.org/docs/getting-started.html",
          "https://legacy.reactjs.org/"
        ],
        "notes": [
          "https://www.w3schools.com/REACT/DEFAULT.ASP",
          "https://www.geeksforgeeks.org/reactjs/react/",
          "https://forum.freecodecamp.org/t/reactjs-tutorial/588827",
          "https://forum.freecodecamp.org/t/need-good-source-to-learn-react/456847",
          "https://forum.freecodecamp.org/t/recommend-a-book-to-learn-react-js/4957"
        ],
        "videos": [
          "https://www.youtube.com/watch?v=w7ejDZ8SWv8",
          "https://www.youtube.com/watch?v=LDB4uaJ87e0",
          "https://www.youtube.com/playlist?list=PLpPqplz6dKxX8KhvEx5AoDJ61N9SIOFYh",
          "https://www.youtube.com/watch?v=HVFSgIVXcD4",
          "https://www.youtube.com/watch?v=hQAHSlTtcmY"
        ]
      }
    }
  ],
  "resources": {
    "docs": [
      "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Frameworks_libraries/Angular_getting_started",
      "https://reactjs.org/",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript"
    ],
    "notes": [
      "https://www.w3schools.com/angular/",
      "https://www.geeksforgeeks.org/angular-js/angular-tutorial/",
      "https://forum.freecodecamp.org/t/angular-js-tutorials/25698",
      "https://forum.freecodecamp.org/t/how-to-learn-angular/316827",
      "https://forum.freecodecamp.org/t/which-version-of-angular-should-i-learn/299063"
    ],
    "videos": [
      "https://www.youtube.com/watch?v=oUmVFHlwZsI",
      "https://www.youtube.com/watch?v=Ata9cSC2WpM",
      "https://www.youtube.com/watch?v=k5E2AVpwsko",
      "https://www.youtube.com/watch?v=23o0evRtrFI",
      "https://www.youtube.com/watch?v=3dHNOWTI7H8"
    ]
  },
  "quiz": [
    {
      "question": "What is TypeScript primarily used for in Angular development?",
      "options": [
        "Style components",
        "Write HTML templates",
        "Implement logic and behavior",
        "Manage server-side code"
      ],
      "correct_option": 2,
      "hint": "TypeScript is a superset of JavaScript."
    },
    {
      "question": "Which of the following is a core feature of Angular components?",
      "options": [
        "Stateful server-side processing",
        "Dynamic template rendering",
        "CSS isolation by default",
        "Asynchronous data handling"
      ],
      "correct_option": 1,
      "hint": "Components define views and manage data-binding."
    },
    {
      "question": "What role does RxJS play in Angular applications?",
      "options": [
        "Handling synchronous data flows",
        "Managing component styles",
        "Enabling reactive programming",
        "Providing server-side logic"
      ],
      "correct_option": 2,
      "hint": "RxJS helps in dealing with asynchronous data streams."
    },
    {
      "question": "In Angular, what is a Service commonly used for?",
      "options": [
        "Structuring HTML templates",
        "Handling user interface events",
        "Encapsulating business logic",
        "Managing component lifecycle"
      ],
      "correct_option": 2,
      "hint": "Services are typically used for logic that is shared across components."
    },
    {
      "question": "How does Angular facilitate the creation of UI elements?",
      "options": [
        "Using JavaScript libraries",
        "Through server-side rendering",
        "By defining components",
        "With AJAX requests"
      ],
      "correct_option": 2,
      "hint": "Components are the building blocks of Angular applications."
    }
  ]
}