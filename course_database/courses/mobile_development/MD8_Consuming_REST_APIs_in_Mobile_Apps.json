{
  "id": "MD8",
  "name": "Consuming REST APIs in Mobile Apps",
  "category": "Mobile Development",
  "primary_tech": "API Integration",
  "topics": [
    "HTTP Requests (GET, POST, PUT, DELETE)",
    "JSON Parsing",
    "Asynchronous Operations",
    "Error Handling & Retries"
  ],
  "levels": [
    "Intermediate"
  ],
  "recommended": true,
  "tags": [
    "API",
    "networking",
    "data"
  ],
  "alternatives": [
    {
      "tech": "GraphQL Clients",
      "reason": "Efficient data fetching for complex data needs, reducing over/under-fetching",
      "tags": [
        "API",
        "GraphQL"
      ],
      "preferred_if": [
        "Backend uses GraphQL",
        "Client needs flexible data queries"
      ],
      "alternative_quiz": [
        {
          "question": "What is one primary advantage of using GraphQL over REST in mobile app development?",
          "options": [
            "GraphQL requires less bandwidth than REST.",
            "GraphQL allows clients to specify exactly what data they need.",
            "GraphQL does not require a server.",
            "GraphQL is easier to implement than REST."
          ],
          "correct_option": 1,
          "hint": "GraphQL provides clients with more control over the data they receive."
        },
        {
          "question": "In the context of GraphQL, what does the term 'over-fetching' mean?",
          "options": [
            "Fetching more data than requested by the client.",
            "Fetching data more frequently than needed.",
            "Fetching data that is not required by the client.",
            "Fetching data with incorrect types."
          ],
          "correct_option": 2,
          "hint": "It involves receiving unnecessary data that was not specified in the client's request."
        },
        {
          "question": "Which GraphQL feature helps in reducing under-fetching issues in mobile apps?",
          "options": [
            "GraphQL Subscriptions",
            "GraphQL Queries",
            "GraphQL Fragments",
            "GraphQL Mutations"
          ],
          "correct_option": 1,
          "hint": "This feature allows clients to request all necessary data in a single operation."
        },
        {
          "question": "Why might a mobile app prefer using a GraphQL client over a REST API for data handling?",
          "options": [
            "To handle static data better",
            "To ensure data is cached permanently",
            "To perform flexible and precise data queries",
            "To simplify the backend architecture"
          ],
          "correct_option": 2,
          "hint": "GraphQL clients allow specifying exactly which fields and relationships are needed."
        },
        {
          "question": "What is a common use case for preferring GraphQL clients in mobile apps?",
          "options": [
            "When the mobile app only uses static data",
            "When the server does not support dynamic queries",
            "When the mobile app requires complex data interactions",
            "When the backend is not using GraphQL"
          ],
          "correct_option": 2,
          "hint": "GraphQL is particularly useful when an app interfaces with complex or related data structures."
        }
      ],
      "resources": {
        "docs": [],
        "notes": [],
        "videos": []
      }
    }
  ],
  "resources": {
    "docs": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events",
      "https://developer.mozilla.org/en-US/docs/Web/API",
      "https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage"
    ],
    "notes": [],
    "videos": []
  },
  "quiz": [
    {
      "question": "Which HTTP method is typically used to retrieve data from a REST API?",
      "options": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "correct_option": 0,
      "hint": "This method is often used to request data from a specified resource."
    },
    {
      "question": "In the context of consuming REST APIs, what is JSON primarily used for?",
      "options": [
        "Styling the UI",
        "Data Interchange",
        "Database Management",
        "Authentication"
      ],
      "correct_option": 1,
      "hint": "This format is lightweight and often used to exchange data between a client and server."
    },
    {
      "question": "What is the primary purpose of using asynchronous operations in mobile apps when consuming REST APIs?",
      "options": [
        "To improve battery efficiency",
        "To ensure UI responsiveness",
        "To increase data security",
        "To enhance graphics quality"
      ],
      "correct_option": 1,
      "hint": "This helps in preventing the app from freezing while waiting for a response."
    },
    {
      "question": "Which HTTP method should be used to update an existing resource in a REST API?",
      "options": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "correct_option": 2,
      "hint": "This method is idempotent, meaning multiple identical requests should have the same effect as a single request."
    },
    {
      "question": "When consuming REST APIs, what is a common practice to handle failures such as network errors?",
      "options": [
        "Ignore the errors",
        "Retry the request",
        "Switch to a different API",
        "Change the HTTP method"
      ],
      "correct_option": 1,
      "hint": "This involves attempting the request again after a certain delay or under certain conditions."
    }
  ]
}